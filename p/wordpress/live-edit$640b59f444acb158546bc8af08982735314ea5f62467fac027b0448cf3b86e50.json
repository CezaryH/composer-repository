{
    "packages": {
        "wordpress\/live-edit": {
            "1.0.1": {
                "name": "wordpress\/live-edit",
                "version": "1.0.1",
                "version_normalized": "1.0.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/live-edit.1.0.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>The Live Edit plugin provides a \"slide out\" panel to edit the title \/ content and any Advanced Custom Fields on any template file!\nInstead of automatically adding an \"edit\" button to the page or post, this plugin allow you to specify a \"region\" (div element) which can be edited. This means you can have multiple \"edit regions\" within the one template file.<\/p>\n\n<p>A good example of this is to imagine an archive page where multiple posts are shown. This plugin would allow you to quickly edit any visible post's fields!<\/p>\n\n<h4>Demo<\/h4>\n\n<p><\/p>\n\n<h4>Instructions<\/h4>\n\n<p>To create an \"editable region\", use the live_edit() function. This function is placed inside the tag where attributes can be created. eg:<\/p>\n\n<pre><code>&#60;div &#60;?php live_edit(&#039;field_name1, field_name2, etc&#039;); ?&#62;&#62;\n    &#60;p&#62;An edit buton will appear in this div! All HTML inside the div will update refresh after updated!&#60;\/p&#62;\n    &#60;p&#62;Field name 1: &#60;?php the_field(&#039;f",
                "uid": "42327"
            },
            "1.0.2": {
                "name": "wordpress\/live-edit",
                "version": "1.0.2",
                "version_normalized": "1.0.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/live-edit.1.0.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>The Live Edit plugin provides a \"slide out\" panel to edit the title \/ content and any Advanced Custom Fields on any template file!\nInstead of automatically adding an \"edit\" button to the page or post, this plugin allow you to specify a \"region\" (div element) which can be edited. This means you can have multiple \"edit regions\" within the one template file.<\/p>\n\n<p>A good example of this is to imagine an archive page where multiple posts are shown. This plugin would allow you to quickly edit any visible post's fields!<\/p>\n\n<h4>Demo<\/h4>\n\n<p><\/p>\n\n<h4>Instructions<\/h4>\n\n<p>To create an \"editable region\", use the live_edit() function. This function is placed inside the tag where attributes can be created. eg:<\/p>\n\n<pre><code>&#60;div &#60;?php live_edit(&#039;field_name1, field_name2, etc&#039;); ?&#62;&#62;\n    &#60;p&#62;An edit buton will appear in this div! All HTML inside the div will update refresh after updated!&#60;\/p&#62;\n    &#60;p&#62;Field name 1: &#60;?php the_field(&#039;f",
                "uid": "42326"
            },
            "1.0.3": {
                "name": "wordpress\/live-edit",
                "version": "1.0.3",
                "version_normalized": "1.0.3.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/live-edit.1.0.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>The Live Edit plugin provides a \"slide out\" panel to edit the title \/ content and any Advanced Custom Fields on any template file!\nInstead of automatically adding an \"edit\" button to the page or post, this plugin allow you to specify a \"region\" (div element) which can be edited. This means you can have multiple \"edit regions\" within the one template file.<\/p>\n\n<p>A good example of this is to imagine an archive page where multiple posts are shown. This plugin would allow you to quickly edit any visible post's fields!<\/p>\n\n<h4>Demo<\/h4>\n\n<p><\/p>\n\n<h4>Instructions<\/h4>\n\n<p>To create an \"editable region\", use the live_edit() function. This function is placed inside the tag where attributes can be created. eg:<\/p>\n\n<pre><code>&#60;div &#60;?php live_edit(&#039;field_name1, field_name2, etc&#039;); ?&#62;&#62;\n    &#60;p&#62;An edit buton will appear in this div! All HTML inside the div will update refresh after updated!&#60;\/p&#62;\n    &#60;p&#62;Field name 1: &#60;?php the_field(&#039;f",
                "uid": "42325"
            },
            "1.0.4": {
                "name": "wordpress\/live-edit",
                "version": "1.0.4",
                "version_normalized": "1.0.4.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/live-edit.1.0.4.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>The Live Edit plugin provides a \"slide out\" panel to edit the title \/ content and any Advanced Custom Fields on any template file!\nInstead of automatically adding an \"edit\" button to the page or post, this plugin allow you to specify a \"region\" (div element) which can be edited. This means you can have multiple \"edit regions\" within the one template file.<\/p>\n\n<p>A good example of this is to imagine an archive page where multiple posts are shown. This plugin would allow you to quickly edit any visible post's fields!<\/p>\n\n<h4>Demo<\/h4>\n\n<p><\/p>\n\n<h4>Instructions<\/h4>\n\n<p>To create an \"editable region\", use the live_edit() function. This function is placed inside the tag where attributes can be created. eg:<\/p>\n\n<pre><code>&#60;div &#60;?php live_edit(&#039;field_name1, field_name2, etc&#039;); ?&#62;&#62;\n    &#60;p&#62;An edit buton will appear in this div! All HTML inside the div will update refresh after updated!&#60;\/p&#62;\n    &#60;p&#62;Field name 1: &#60;?php the_field(&#039;f",
                "uid": "42324"
            },
            "2.0.0": {
                "name": "wordpress\/live-edit",
                "version": "2.0.0",
                "version_normalized": "2.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/live-edit.2.0.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>The Live Edit plugin provides a \"slide out\" panel to edit the title \/ content and any Advanced Custom Fields on any template file!\nInstead of automatically adding an \"edit\" button to the page or post, this plugin allow you to specify a \"region\" (div element) which can be edited. This means you can have multiple \"edit regions\" within the one template file.<\/p>\n\n<p>A good example of this is to imagine an archive page where multiple posts are shown. This plugin would allow you to quickly edit any visible post's fields!<\/p>\n\n<h4>Demo<\/h4>\n\n<p><\/p>\n\n<h4>Instructions<\/h4>\n\n<p>To create an \"editable region\", use the live_edit() function. This function is placed inside the tag where attributes can be created. eg:<\/p>\n\n<pre><code>&#60;div &#60;?php live_edit(&#039;field_name1, field_name2, etc&#039;); ?&#62;&#62;\n    &#60;p&#62;An edit buton will appear in this div! All HTML inside the div will update refresh after updated!&#60;\/p&#62;\n    &#60;p&#62;Field name 1: &#60;?php the_field(&#039;f",
                "uid": "42323"
            }
        }
    }
}