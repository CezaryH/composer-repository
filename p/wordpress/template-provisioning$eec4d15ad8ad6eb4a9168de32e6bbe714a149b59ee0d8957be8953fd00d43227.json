{
    "packages": {
        "wordpress\/template-provisioning": {
            "0.1": {
                "name": "wordpress\/template-provisioning",
                "version": "0.1",
                "version_normalized": "0.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/template-provisioning.0.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Overview<\/h4>\n\n<p>The Template Provisioning plugin automatically links to stylesheet and javascript files in your theme directories based on the template file that renders a page. It searches in several pre-defined locations for files, and includes whichever files are found.<\/p>\n\n<p>I wrote this plugin because I prefer this method to using Wordpress's conditional tags in my header.  Keeping resources for different templates separate helps me keep my custom theme directories clean and organized.<\/p>\n\n<p>For example, if I have a custom template \"map.php\" that is being used by a static page, I can create \"css\/map.css\" and \"js\/map.js\" files and they'll be automatically linked-up by this plugin.<\/p>\n\n<h4>Requirements<\/h4>\n\n<p>Will this plugin work with your theme? Probably. It's completely additive, and doesn't change anything that would affect other plugins.  I have been using most of this code since Wordpress 2.5 or so.  But be warned... I haven't thoroughly tested it across versions ",
                "uid": "84670"
            },
            "0.2": {
                "name": "wordpress\/template-provisioning",
                "version": "0.2",
                "version_normalized": "0.2.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/template-provisioning.0.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Overview<\/h4>\n\n<p>The Template Provisioning plugin automatically links to stylesheet and javascript files in your theme directories based on the template file that renders a page. It searches in several pre-defined locations for files, and includes whichever files are found.<\/p>\n\n<p>I wrote this plugin because I prefer this method to using Wordpress's conditional tags in my header.  Keeping resources for different templates separate helps me keep my custom theme directories clean and organized.<\/p>\n\n<p>For example, if I have a custom template \"map.php\" that is being used by a static page, I can create \"css\/map.css\" and \"js\/map.js\" files and they'll be automatically linked-up by this plugin.<\/p>\n\n<h4>Requirements<\/h4>\n\n<p>Will this plugin work with your theme? Probably. It's completely additive, and doesn't change anything that would affect other plugins.  I have been using most of this code since Wordpress 2.5 or so.  But be warned... I haven't thoroughly tested it across versions ",
                "uid": "84669"
            },
            "0.2.1": {
                "name": "wordpress\/template-provisioning",
                "version": "0.2.1",
                "version_normalized": "0.2.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/template-provisioning.0.2.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Overview<\/h4>\n\n<p>The Template Provisioning plugin automatically links to stylesheet and javascript files in your theme directories based on the template file that renders a page. It searches in several pre-defined locations for files, and includes whichever files are found.<\/p>\n\n<p>I wrote this plugin because I prefer this method to using Wordpress's conditional tags in my header.  Keeping resources for different templates separate helps me keep my custom theme directories clean and organized.<\/p>\n\n<p>For example, if I have a custom template \"map.php\" that is being used by a static page, I can create \"css\/map.css\" and \"js\/map.js\" files and they'll be automatically linked-up by this plugin.<\/p>\n\n<h4>Requirements<\/h4>\n\n<p>Will this plugin work with your theme? Probably. It's completely additive, and doesn't change anything that would affect other plugins.  I have been using most of this code since Wordpress 2.5 or so.  But be warned... I haven't thoroughly tested it across versions ",
                "uid": "84668"
            },
            "0.2.2": {
                "name": "wordpress\/template-provisioning",
                "version": "0.2.2",
                "version_normalized": "0.2.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/template-provisioning.0.2.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Overview<\/h4>\n\n<p>The Template Provisioning plugin automatically links to stylesheet and javascript files in your theme directories based on the template file that renders a page. It searches in several pre-defined locations for files, and includes whichever files are found.<\/p>\n\n<p>I wrote this plugin because I prefer this method to using Wordpress's conditional tags in my header.  Keeping resources for different templates separate helps me keep my custom theme directories clean and organized.<\/p>\n\n<p>For example, if I have a custom template \"map.php\" that is being used by a static page, I can create \"css\/map.css\" and \"js\/map.js\" files and they'll be automatically linked-up by this plugin.<\/p>\n\n<h4>Requirements<\/h4>\n\n<p>Will this plugin work with your theme? Probably. It's completely additive, and doesn't change anything that would affect other plugins.  I have been using most of this code since Wordpress 2.5 or so.  But be warned... I haven't thoroughly tested it across versions ",
                "uid": "84667"
            },
            "0.2.3": {
                "name": "wordpress\/template-provisioning",
                "version": "0.2.3",
                "version_normalized": "0.2.3.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/template-provisioning.0.2.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Overview<\/h4>\n\n<p>The Template Provisioning plugin automatically links to stylesheet and javascript files in your theme directories based on the template file that renders a page. It searches in several pre-defined locations for files, and includes whichever files are found.<\/p>\n\n<p>I wrote this plugin because I prefer this method to using Wordpress's conditional tags in my header.  Keeping resources for different templates separate helps me keep my custom theme directories clean and organized.<\/p>\n\n<p>For example, if I have a custom template \"map.php\" that is being used by a static page, I can create \"css\/map.css\" and \"js\/map.js\" files and they'll be automatically linked-up by this plugin.<\/p>\n\n<h4>Requirements<\/h4>\n\n<p>Will this plugin work with your theme? Probably. It's completely additive, and doesn't change anything that would affect other plugins.  I have been using most of this code since Wordpress 2.5 or so.  But be warned... I haven't thoroughly tested it across versions ",
                "uid": "84666"
            },
            "0.2.4": {
                "name": "wordpress\/template-provisioning",
                "version": "0.2.4",
                "version_normalized": "0.2.4.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/template-provisioning.0.2.4.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Overview<\/h4>\n\n<p>The Template Provisioning plugin automatically links to stylesheet and javascript files in your theme directories based on the template file that renders a page. It searches in several pre-defined locations for files, and includes whichever files are found.<\/p>\n\n<p>I wrote this plugin because I prefer this method to using Wordpress's conditional tags in my header.  Keeping resources for different templates separate helps me keep my custom theme directories clean and organized.<\/p>\n\n<p>For example, if I have a custom template \"map.php\" that is being used by a static page, I can create \"css\/map.css\" and \"js\/map.js\" files and they'll be automatically linked-up by this plugin.<\/p>\n\n<h4>Requirements<\/h4>\n\n<p>Will this plugin work with your theme? Probably. It's completely additive, and doesn't change anything that would affect other plugins.  I have been using most of this code since Wordpress 2.5 or so.  But be warned... I haven't thoroughly tested it across versions ",
                "uid": "84665"
            },
            "0.2.5": {
                "name": "wordpress\/template-provisioning",
                "version": "0.2.5",
                "version_normalized": "0.2.5.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/template-provisioning.0.2.5.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Overview<\/h4>\n\n<p>The Template Provisioning plugin automatically links to stylesheet and javascript files in your theme directories based on the template file that renders a page. It searches in several pre-defined locations for files, and includes whichever files are found.<\/p>\n\n<p>I wrote this plugin because I prefer this method to using Wordpress's conditional tags in my header.  Keeping resources for different templates separate helps me keep my custom theme directories clean and organized.<\/p>\n\n<p>For example, if I have a custom template \"map.php\" that is being used by a static page, I can create \"css\/map.css\" and \"js\/map.js\" files and they'll be automatically linked-up by this plugin.<\/p>\n\n<h4>Requirements<\/h4>\n\n<p>Will this plugin work with your theme? Probably. It's completely additive, and doesn't change anything that would affect other plugins.  I have been using most of this code since Wordpress 2.5 or so.  But be warned... I haven't thoroughly tested it across versions ",
                "uid": "84662"
            }
        }
    }
}