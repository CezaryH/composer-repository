{
    "packages": {
        "wordpress\/toolbox": {
            "0.1": {
                "name": "wordpress\/toolbox",
                "version": "0.1",
                "version_normalized": "0.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/toolbox.0.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Bausteinsystem<\/h4>\n\n<p>Vergr&#246;&#223;ert sich der Funktionsumfang eines WordPress-Blogs, so steigt entweder die Anzahl der installierten Plugins oder die <em>functions.php<\/em> im Theme w&#228;chst durch einen stetigen Neuzugang an Code-Fragmenten.<\/p>\n\n<p>Und da kleinere Funktionsaufrufe kaum als Plugin-L&#246;sungen zur Verf&#252;gung stehen, werden diese gern in die besagte Erweiterungsdatei eingef&#252;gt. Im Laufe der Zeit und Entwicklung wird die Datei <em>functions.php<\/em> schlicht und einfach un&#252;bersichtlich und &#252;berdimensioniert. Zudem kommt die Tatsache, dass WordPress die Datei sowohl im Blog-Frontend wie auch im Admin-Bereich einbindet und ausf&#252;hrt.<\/p>\n\n<p><em>Toolbox<\/em> wurde konzipiert, um die <em>functions.php<\/em> zu entlasten oder g&#228;nzlich abzuschaffen. Das Prinzip: Gruppierte Code-Snippets aus <em>functions.php<\/em> werden in Module zusammengefasst - daf&#252;r wird jeweils eine PHP-Datei angelegt und mit notwendigen, optionalen Metadat",
                "uid": "33120"
            },
            "0.3": {
                "name": "wordpress\/toolbox",
                "version": "0.3",
                "version_normalized": "0.3.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/wordpress.org\/themes\/download\/toolbox.0.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Bausteinsystem<\/h4>\n\n<p>Vergr&#246;&#223;ert sich der Funktionsumfang eines WordPress-Blogs, so steigt entweder die Anzahl der installierten Plugins oder die <em>functions.php<\/em> im Theme w&#228;chst durch einen stetigen Neuzugang an Code-Fragmenten.<\/p>\n\n<p>Und da kleinere Funktionsaufrufe kaum als Plugin-L&#246;sungen zur Verf&#252;gung stehen, werden diese gern in die besagte Erweiterungsdatei eingef&#252;gt. Im Laufe der Zeit und Entwicklung wird die Datei <em>functions.php<\/em> schlicht und einfach un&#252;bersichtlich und &#252;berdimensioniert. Zudem kommt die Tatsache, dass WordPress die Datei sowohl im Blog-Frontend wie auch im Admin-Bereich einbindet und ausf&#252;hrt.<\/p>\n\n<p><em>Toolbox<\/em> wurde konzipiert, um die <em>functions.php<\/em> zu entlasten oder g&#228;nzlich abzuschaffen. Das Prinzip: Gruppierte Code-Snippets aus <em>functions.php<\/em> werden in Module zusammengefasst - daf&#252;r wird jeweils eine PHP-Datei angelegt und mit notwendigen, optionalen Metadat",
                "uid": "6707"
            },
            "0.4": {
                "name": "wordpress\/toolbox",
                "version": "0.4",
                "version_normalized": "0.4.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/wordpress.org\/themes\/download\/toolbox.0.4.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Bausteinsystem<\/h4>\n\n<p>Vergr&#246;&#223;ert sich der Funktionsumfang eines WordPress-Blogs, so steigt entweder die Anzahl der installierten Plugins oder die <em>functions.php<\/em> im Theme w&#228;chst durch einen stetigen Neuzugang an Code-Fragmenten.<\/p>\n\n<p>Und da kleinere Funktionsaufrufe kaum als Plugin-L&#246;sungen zur Verf&#252;gung stehen, werden diese gern in die besagte Erweiterungsdatei eingef&#252;gt. Im Laufe der Zeit und Entwicklung wird die Datei <em>functions.php<\/em> schlicht und einfach un&#252;bersichtlich und &#252;berdimensioniert. Zudem kommt die Tatsache, dass WordPress die Datei sowohl im Blog-Frontend wie auch im Admin-Bereich einbindet und ausf&#252;hrt.<\/p>\n\n<p><em>Toolbox<\/em> wurde konzipiert, um die <em>functions.php<\/em> zu entlasten oder g&#228;nzlich abzuschaffen. Das Prinzip: Gruppierte Code-Snippets aus <em>functions.php<\/em> werden in Module zusammengefasst - daf&#252;r wird jeweils eine PHP-Datei angelegt und mit notwendigen, optionalen Metadat",
                "uid": "6705"
            },
            "0.4.1": {
                "name": "wordpress\/toolbox",
                "version": "0.4.1",
                "version_normalized": "0.4.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/wordpress.org\/themes\/download\/toolbox.0.4.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Bausteinsystem<\/h4>\n\n<p>Vergr&#246;&#223;ert sich der Funktionsumfang eines WordPress-Blogs, so steigt entweder die Anzahl der installierten Plugins oder die <em>functions.php<\/em> im Theme w&#228;chst durch einen stetigen Neuzugang an Code-Fragmenten.<\/p>\n\n<p>Und da kleinere Funktionsaufrufe kaum als Plugin-L&#246;sungen zur Verf&#252;gung stehen, werden diese gern in die besagte Erweiterungsdatei eingef&#252;gt. Im Laufe der Zeit und Entwicklung wird die Datei <em>functions.php<\/em> schlicht und einfach un&#252;bersichtlich und &#252;berdimensioniert. Zudem kommt die Tatsache, dass WordPress die Datei sowohl im Blog-Frontend wie auch im Admin-Bereich einbindet und ausf&#252;hrt.<\/p>\n\n<p><em>Toolbox<\/em> wurde konzipiert, um die <em>functions.php<\/em> zu entlasten oder g&#228;nzlich abzuschaffen. Das Prinzip: Gruppierte Code-Snippets aus <em>functions.php<\/em> werden in Module zusammengefasst - daf&#252;r wird jeweils eine PHP-Datei angelegt und mit notwendigen, optionalen Metadat",
                "uid": "6704"
            },
            "0.4.2": {
                "name": "wordpress\/toolbox",
                "version": "0.4.2",
                "version_normalized": "0.4.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/wordpress.org\/themes\/download\/toolbox.0.4.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Bausteinsystem<\/h4>\n\n<p>Vergr&#246;&#223;ert sich der Funktionsumfang eines WordPress-Blogs, so steigt entweder die Anzahl der installierten Plugins oder die <em>functions.php<\/em> im Theme w&#228;chst durch einen stetigen Neuzugang an Code-Fragmenten.<\/p>\n\n<p>Und da kleinere Funktionsaufrufe kaum als Plugin-L&#246;sungen zur Verf&#252;gung stehen, werden diese gern in die besagte Erweiterungsdatei eingef&#252;gt. Im Laufe der Zeit und Entwicklung wird die Datei <em>functions.php<\/em> schlicht und einfach un&#252;bersichtlich und &#252;berdimensioniert. Zudem kommt die Tatsache, dass WordPress die Datei sowohl im Blog-Frontend wie auch im Admin-Bereich einbindet und ausf&#252;hrt.<\/p>\n\n<p><em>Toolbox<\/em> wurde konzipiert, um die <em>functions.php<\/em> zu entlasten oder g&#228;nzlich abzuschaffen. Das Prinzip: Gruppierte Code-Snippets aus <em>functions.php<\/em> werden in Module zusammengefasst - daf&#252;r wird jeweils eine PHP-Datei angelegt und mit notwendigen, optionalen Metadat",
                "uid": "6702"
            },
            "0.4.3": {
                "name": "wordpress\/toolbox",
                "version": "0.4.3",
                "version_normalized": "0.4.3.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/wordpress.org\/themes\/download\/toolbox.0.4.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Bausteinsystem<\/h4>\n\n<p>Vergr&#246;&#223;ert sich der Funktionsumfang eines WordPress-Blogs, so steigt entweder die Anzahl der installierten Plugins oder die <em>functions.php<\/em> im Theme w&#228;chst durch einen stetigen Neuzugang an Code-Fragmenten.<\/p>\n\n<p>Und da kleinere Funktionsaufrufe kaum als Plugin-L&#246;sungen zur Verf&#252;gung stehen, werden diese gern in die besagte Erweiterungsdatei eingef&#252;gt. Im Laufe der Zeit und Entwicklung wird die Datei <em>functions.php<\/em> schlicht und einfach un&#252;bersichtlich und &#252;berdimensioniert. Zudem kommt die Tatsache, dass WordPress die Datei sowohl im Blog-Frontend wie auch im Admin-Bereich einbindet und ausf&#252;hrt.<\/p>\n\n<p><em>Toolbox<\/em> wurde konzipiert, um die <em>functions.php<\/em> zu entlasten oder g&#228;nzlich abzuschaffen. Das Prinzip: Gruppierte Code-Snippets aus <em>functions.php<\/em> werden in Module zusammengefasst - daf&#252;r wird jeweils eine PHP-Datei angelegt und mit notwendigen, optionalen Metadat",
                "uid": "6700"
            },
            "1.0": {
                "name": "wordpress\/toolbox",
                "version": "1.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/wordpress.org\/themes\/download\/toolbox.1.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Bausteinsystem<\/h4>\n\n<p>Vergr&#246;&#223;ert sich der Funktionsumfang eines WordPress-Blogs, so steigt entweder die Anzahl der installierten Plugins oder die <em>functions.php<\/em> im Theme w&#228;chst durch einen stetigen Neuzugang an Code-Fragmenten.<\/p>\n\n<p>Und da kleinere Funktionsaufrufe kaum als Plugin-L&#246;sungen zur Verf&#252;gung stehen, werden diese gern in die besagte Erweiterungsdatei eingef&#252;gt. Im Laufe der Zeit und Entwicklung wird die Datei <em>functions.php<\/em> schlicht und einfach un&#252;bersichtlich und &#252;berdimensioniert. Zudem kommt die Tatsache, dass WordPress die Datei sowohl im Blog-Frontend wie auch im Admin-Bereich einbindet und ausf&#252;hrt.<\/p>\n\n<p><em>Toolbox<\/em> wurde konzipiert, um die <em>functions.php<\/em> zu entlasten oder g&#228;nzlich abzuschaffen. Das Prinzip: Gruppierte Code-Snippets aus <em>functions.php<\/em> werden in Module zusammengefasst - daf&#252;r wird jeweils eine PHP-Datei angelegt und mit notwendigen, optionalen Metadat",
                "uid": "6698"
            },
            "1.1": {
                "name": "wordpress\/toolbox",
                "version": "1.1",
                "version_normalized": "1.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/wordpress.org\/themes\/download\/toolbox.1.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Bausteinsystem<\/h4>\n\n<p>Vergr&#246;&#223;ert sich der Funktionsumfang eines WordPress-Blogs, so steigt entweder die Anzahl der installierten Plugins oder die <em>functions.php<\/em> im Theme w&#228;chst durch einen stetigen Neuzugang an Code-Fragmenten.<\/p>\n\n<p>Und da kleinere Funktionsaufrufe kaum als Plugin-L&#246;sungen zur Verf&#252;gung stehen, werden diese gern in die besagte Erweiterungsdatei eingef&#252;gt. Im Laufe der Zeit und Entwicklung wird die Datei <em>functions.php<\/em> schlicht und einfach un&#252;bersichtlich und &#252;berdimensioniert. Zudem kommt die Tatsache, dass WordPress die Datei sowohl im Blog-Frontend wie auch im Admin-Bereich einbindet und ausf&#252;hrt.<\/p>\n\n<p><em>Toolbox<\/em> wurde konzipiert, um die <em>functions.php<\/em> zu entlasten oder g&#228;nzlich abzuschaffen. Das Prinzip: Gruppierte Code-Snippets aus <em>functions.php<\/em> werden in Module zusammengefasst - daf&#252;r wird jeweils eine PHP-Datei angelegt und mit notwendigen, optionalen Metadat",
                "uid": "6696"
            },
            "1.2": {
                "name": "wordpress\/toolbox",
                "version": "1.2",
                "version_normalized": "1.2.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/wordpress.org\/themes\/download\/toolbox.1.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Bausteinsystem<\/h4>\n\n<p>Vergr&#246;&#223;ert sich der Funktionsumfang eines WordPress-Blogs, so steigt entweder die Anzahl der installierten Plugins oder die <em>functions.php<\/em> im Theme w&#228;chst durch einen stetigen Neuzugang an Code-Fragmenten.<\/p>\n\n<p>Und da kleinere Funktionsaufrufe kaum als Plugin-L&#246;sungen zur Verf&#252;gung stehen, werden diese gern in die besagte Erweiterungsdatei eingef&#252;gt. Im Laufe der Zeit und Entwicklung wird die Datei <em>functions.php<\/em> schlicht und einfach un&#252;bersichtlich und &#252;berdimensioniert. Zudem kommt die Tatsache, dass WordPress die Datei sowohl im Blog-Frontend wie auch im Admin-Bereich einbindet und ausf&#252;hrt.<\/p>\n\n<p><em>Toolbox<\/em> wurde konzipiert, um die <em>functions.php<\/em> zu entlasten oder g&#228;nzlich abzuschaffen. Das Prinzip: Gruppierte Code-Snippets aus <em>functions.php<\/em> werden in Module zusammengefasst - daf&#252;r wird jeweils eine PHP-Datei angelegt und mit notwendigen, optionalen Metadat",
                "uid": "6694"
            },
            "1.3": {
                "name": "wordpress\/toolbox",
                "version": "1.3",
                "version_normalized": "1.3.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/wordpress.org\/themes\/download\/toolbox.1.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Bausteinsystem<\/h4>\n\n<p>Vergr&#246;&#223;ert sich der Funktionsumfang eines WordPress-Blogs, so steigt entweder die Anzahl der installierten Plugins oder die <em>functions.php<\/em> im Theme w&#228;chst durch einen stetigen Neuzugang an Code-Fragmenten.<\/p>\n\n<p>Und da kleinere Funktionsaufrufe kaum als Plugin-L&#246;sungen zur Verf&#252;gung stehen, werden diese gern in die besagte Erweiterungsdatei eingef&#252;gt. Im Laufe der Zeit und Entwicklung wird die Datei <em>functions.php<\/em> schlicht und einfach un&#252;bersichtlich und &#252;berdimensioniert. Zudem kommt die Tatsache, dass WordPress die Datei sowohl im Blog-Frontend wie auch im Admin-Bereich einbindet und ausf&#252;hrt.<\/p>\n\n<p><em>Toolbox<\/em> wurde konzipiert, um die <em>functions.php<\/em> zu entlasten oder g&#228;nzlich abzuschaffen. Das Prinzip: Gruppierte Code-Snippets aus <em>functions.php<\/em> werden in Module zusammengefasst - daf&#252;r wird jeweils eine PHP-Datei angelegt und mit notwendigen, optionalen Metadat",
                "uid": "6693"
            },
            "1.4": {
                "name": "wordpress\/toolbox",
                "version": "1.4",
                "version_normalized": "1.4.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/wordpress.org\/themes\/download\/toolbox.1.4.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Bausteinsystem<\/h4>\n\n<p>Vergr&#246;&#223;ert sich der Funktionsumfang eines WordPress-Blogs, so steigt entweder die Anzahl der installierten Plugins oder die <em>functions.php<\/em> im Theme w&#228;chst durch einen stetigen Neuzugang an Code-Fragmenten.<\/p>\n\n<p>Und da kleinere Funktionsaufrufe kaum als Plugin-L&#246;sungen zur Verf&#252;gung stehen, werden diese gern in die besagte Erweiterungsdatei eingef&#252;gt. Im Laufe der Zeit und Entwicklung wird die Datei <em>functions.php<\/em> schlicht und einfach un&#252;bersichtlich und &#252;berdimensioniert. Zudem kommt die Tatsache, dass WordPress die Datei sowohl im Blog-Frontend wie auch im Admin-Bereich einbindet und ausf&#252;hrt.<\/p>\n\n<p><em>Toolbox<\/em> wurde konzipiert, um die <em>functions.php<\/em> zu entlasten oder g&#228;nzlich abzuschaffen. Das Prinzip: Gruppierte Code-Snippets aus <em>functions.php<\/em> werden in Module zusammengefasst - daf&#252;r wird jeweils eine PHP-Datei angelegt und mit notwendigen, optionalen Metadat",
                "uid": "6690"
            }
        }
    }
}