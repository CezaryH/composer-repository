{
    "packages": {
        "wordpress\/wp-migrate-db": {
            "0.2.1": {
                "name": "wordpress\/wp-migrate-db",
                "version": "0.2.1",
                "version_normalized": "0.2.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-migrate-db.0.2.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP Migrate DB exports your database as a MySQL data dump (much like phpMyAdmin), does a find and replace on URLs and file paths, then allows you to save it to your computer. It is perfect for developers who need to update their local install with fresh data from the production site, or copy their locally developed site to a staging or production server.<\/p>\n\n<p>It even takes into account serialized data (both arrays and objects) and updates the string length values.<\/p>\n\n<p>Example: <code>s:5:\"hello\"<\/code> becomes <code>s:11:\"hello world\"<\/code><\/p>\n\n<p>Looking to contribute some code? The project is <a href=\"https:\/\/github.com\/bradt\/wp-migrate-db\">on Github<\/a> and I'm more than happy to accept pull requests.<\/p>\n\n<p><strong>&#042;NEW&#042; Pro Version with Email Support and More Features<\/strong><\/p>\n\n<ul>\n<li>Select the tables you want to migrate<\/li>\n<li>Pull production db down and replace local db<\/li>\n<li>Push local db up and replace production\/staging db<\/li>\n<li>Unlimited f",
                "uid": "76578"
            },
            "0.2.2": {
                "name": "wordpress\/wp-migrate-db",
                "version": "0.2.2",
                "version_normalized": "0.2.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-migrate-db.0.2.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP Migrate DB exports your database as a MySQL data dump (much like phpMyAdmin), does a find and replace on URLs and file paths, then allows you to save it to your computer. It is perfect for developers who need to update their local install with fresh data from the production site, or copy their locally developed site to a staging or production server.<\/p>\n\n<p>It even takes into account serialized data (both arrays and objects) and updates the string length values.<\/p>\n\n<p>Example: <code>s:5:\"hello\"<\/code> becomes <code>s:11:\"hello world\"<\/code><\/p>\n\n<p>Looking to contribute some code? The project is <a href=\"https:\/\/github.com\/bradt\/wp-migrate-db\">on Github<\/a> and I'm more than happy to accept pull requests.<\/p>\n\n<p><strong>&#042;NEW&#042; Pro Version with Email Support and More Features<\/strong><\/p>\n\n<ul>\n<li>Select the tables you want to migrate<\/li>\n<li>Pull production db down and replace local db<\/li>\n<li>Push local db up and replace production\/staging db<\/li>\n<li>Unlimited f",
                "uid": "76577"
            },
            "0.3": {
                "name": "wordpress\/wp-migrate-db",
                "version": "0.3",
                "version_normalized": "0.3.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-migrate-db.0.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP Migrate DB exports your database as a MySQL data dump (much like phpMyAdmin), does a find and replace on URLs and file paths, then allows you to save it to your computer. It is perfect for developers who need to update their local install with fresh data from the production site, or copy their locally developed site to a staging or production server.<\/p>\n\n<p>It even takes into account serialized data (both arrays and objects) and updates the string length values.<\/p>\n\n<p>Example: <code>s:5:\"hello\"<\/code> becomes <code>s:11:\"hello world\"<\/code><\/p>\n\n<p>Looking to contribute some code? The project is <a href=\"https:\/\/github.com\/bradt\/wp-migrate-db\">on Github<\/a> and I'm more than happy to accept pull requests.<\/p>\n\n<p><strong>&#042;NEW&#042; Pro Version with Email Support and More Features<\/strong><\/p>\n\n<ul>\n<li>Select the tables you want to migrate<\/li>\n<li>Pull production db down and replace local db<\/li>\n<li>Push local db up and replace production\/staging db<\/li>\n<li>Unlimited f",
                "uid": "76576"
            },
            "0.4": {
                "name": "wordpress\/wp-migrate-db",
                "version": "0.4",
                "version_normalized": "0.4.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-migrate-db.0.4.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP Migrate DB exports your database as a MySQL data dump (much like phpMyAdmin), does a find and replace on URLs and file paths, then allows you to save it to your computer. It is perfect for developers who need to update their local install with fresh data from the production site, or copy their locally developed site to a staging or production server.<\/p>\n\n<p>It even takes into account serialized data (both arrays and objects) and updates the string length values.<\/p>\n\n<p>Example: <code>s:5:\"hello\"<\/code> becomes <code>s:11:\"hello world\"<\/code><\/p>\n\n<p>Looking to contribute some code? The project is <a href=\"https:\/\/github.com\/bradt\/wp-migrate-db\">on Github<\/a> and I'm more than happy to accept pull requests.<\/p>\n\n<p><strong>&#042;NEW&#042; Pro Version with Email Support and More Features<\/strong><\/p>\n\n<ul>\n<li>Select the tables you want to migrate<\/li>\n<li>Pull production db down and replace local db<\/li>\n<li>Push local db up and replace production\/staging db<\/li>\n<li>Unlimited f",
                "uid": "76575"
            },
            "0.4.1": {
                "name": "wordpress\/wp-migrate-db",
                "version": "0.4.1",
                "version_normalized": "0.4.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-migrate-db.0.4.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP Migrate DB exports your database as a MySQL data dump (much like phpMyAdmin), does a find and replace on URLs and file paths, then allows you to save it to your computer. It is perfect for developers who need to update their local install with fresh data from the production site, or copy their locally developed site to a staging or production server.<\/p>\n\n<p>It even takes into account serialized data (both arrays and objects) and updates the string length values.<\/p>\n\n<p>Example: <code>s:5:\"hello\"<\/code> becomes <code>s:11:\"hello world\"<\/code><\/p>\n\n<p>Looking to contribute some code? The project is <a href=\"https:\/\/github.com\/bradt\/wp-migrate-db\">on Github<\/a> and I'm more than happy to accept pull requests.<\/p>\n\n<p><strong>&#042;NEW&#042; Pro Version with Email Support and More Features<\/strong><\/p>\n\n<ul>\n<li>Select the tables you want to migrate<\/li>\n<li>Pull production db down and replace local db<\/li>\n<li>Push local db up and replace production\/staging db<\/li>\n<li>Unlimited f",
                "uid": "76574"
            },
            "0.4.2": {
                "name": "wordpress\/wp-migrate-db",
                "version": "0.4.2",
                "version_normalized": "0.4.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-migrate-db.0.4.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP Migrate DB exports your database as a MySQL data dump (much like phpMyAdmin), does a find and replace on URLs and file paths, then allows you to save it to your computer. It is perfect for developers who need to update their local install with fresh data from the production site, or copy their locally developed site to a staging or production server.<\/p>\n\n<p>It even takes into account serialized data (both arrays and objects) and updates the string length values.<\/p>\n\n<p>Example: <code>s:5:\"hello\"<\/code> becomes <code>s:11:\"hello world\"<\/code><\/p>\n\n<p>Looking to contribute some code? The project is <a href=\"https:\/\/github.com\/bradt\/wp-migrate-db\">on Github<\/a> and I'm more than happy to accept pull requests.<\/p>\n\n<p><strong>&#042;NEW&#042; Pro Version with Email Support and More Features<\/strong><\/p>\n\n<ul>\n<li>Select the tables you want to migrate<\/li>\n<li>Pull production db down and replace local db<\/li>\n<li>Push local db up and replace production\/staging db<\/li>\n<li>Unlimited f",
                "uid": "76573"
            },
            "0.4.3": {
                "name": "wordpress\/wp-migrate-db",
                "version": "0.4.3",
                "version_normalized": "0.4.3.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-migrate-db.0.4.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP Migrate DB exports your database as a MySQL data dump (much like phpMyAdmin), does a find and replace on URLs and file paths, then allows you to save it to your computer. It is perfect for developers who need to update their local install with fresh data from the production site, or copy their locally developed site to a staging or production server.<\/p>\n\n<p>It even takes into account serialized data (both arrays and objects) and updates the string length values.<\/p>\n\n<p>Example: <code>s:5:\"hello\"<\/code> becomes <code>s:11:\"hello world\"<\/code><\/p>\n\n<p>Looking to contribute some code? The project is <a href=\"https:\/\/github.com\/bradt\/wp-migrate-db\">on Github<\/a> and I'm more than happy to accept pull requests.<\/p>\n\n<p><strong>&#042;NEW&#042; Pro Version with Email Support and More Features<\/strong><\/p>\n\n<ul>\n<li>Select the tables you want to migrate<\/li>\n<li>Pull production db down and replace local db<\/li>\n<li>Push local db up and replace production\/staging db<\/li>\n<li>Unlimited f",
                "uid": "76572"
            },
            "0.4.4": {
                "name": "wordpress\/wp-migrate-db",
                "version": "0.4.4",
                "version_normalized": "0.4.4.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-migrate-db.0.4.4.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP Migrate DB exports your database as a MySQL data dump (much like phpMyAdmin), does a find and replace on URLs and file paths, then allows you to save it to your computer. It is perfect for developers who need to update their local install with fresh data from the production site, or copy their locally developed site to a staging or production server.<\/p>\n\n<p>It even takes into account serialized data (both arrays and objects) and updates the string length values.<\/p>\n\n<p>Example: <code>s:5:\"hello\"<\/code> becomes <code>s:11:\"hello world\"<\/code><\/p>\n\n<p>Looking to contribute some code? The project is <a href=\"https:\/\/github.com\/bradt\/wp-migrate-db\">on Github<\/a> and I'm more than happy to accept pull requests.<\/p>\n\n<p><strong>&#042;NEW&#042; Pro Version with Email Support and More Features<\/strong><\/p>\n\n<ul>\n<li>Select the tables you want to migrate<\/li>\n<li>Pull production db down and replace local db<\/li>\n<li>Push local db up and replace production\/staging db<\/li>\n<li>Unlimited f",
                "uid": "76571"
            },
            "0.5": {
                "name": "wordpress\/wp-migrate-db",
                "version": "0.5",
                "version_normalized": "0.5.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-migrate-db.0.5.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP Migrate DB exports your database as a MySQL data dump (much like phpMyAdmin), does a find and replace on URLs and file paths, then allows you to save it to your computer. It is perfect for developers who need to update their local install with fresh data from the production site, or copy their locally developed site to a staging or production server.<\/p>\n\n<p>It even takes into account serialized data (both arrays and objects) and updates the string length values.<\/p>\n\n<p>Example: <code>s:5:\"hello\"<\/code> becomes <code>s:11:\"hello world\"<\/code><\/p>\n\n<p>Looking to contribute some code? The project is <a href=\"https:\/\/github.com\/bradt\/wp-migrate-db\">on Github<\/a> and I'm more than happy to accept pull requests.<\/p>\n\n<p><strong>&#042;NEW&#042; Pro Version with Email Support and More Features<\/strong><\/p>\n\n<ul>\n<li>Select the tables you want to migrate<\/li>\n<li>Pull production db down and replace local db<\/li>\n<li>Push local db up and replace production\/staging db<\/li>\n<li>Unlimited f",
                "uid": "123816"
            }
        }
    }
}