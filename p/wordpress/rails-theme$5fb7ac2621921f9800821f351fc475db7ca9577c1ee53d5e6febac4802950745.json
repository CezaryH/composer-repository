{
    "packages": {
        "wordpress\/rails-theme": {
            "1.0.0": {
                "name": "wordpress\/rails-theme",
                "version": "1.0.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/rails-theme.1.0.0.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>This calls back to a web service to get theme information, so that it is easy to keep the rails and WP sides in sync.<\/p>\n\n<p>It is designed to be used when a Rails application wishes to contain WordPress content. This allows the WordPress pages\nto directly use the styles of the Rails application so that it will always match, even when the Rails app changes.<\/p>\n\n<p>It is also useful when the header of the page changes, for instance, if new menu items can appear depending on the state of the\napplication.<\/p>\n\n<p>And finally, if you want to POST back to the Rails app (for instance, to log in), you need the CSRF to be set in the page's header,\nand that needs to come from the Rails session.<\/p>\n\n<p>NOTE: This might take some tweaking depending on the theme you are using. It successfully works with the default 2011 theme\nand the Hybrid theme.<\/p>\n\n<p>It requires an entry point in your Rails controller that returns three things:\n1. a section that is put in the header to load stylesheets ",
                "uid": "34621"
            },
            "1.0.1": {
                "name": "wordpress\/rails-theme",
                "version": "1.0.1",
                "version_normalized": "1.0.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/rails-theme.1.0.1.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>This calls back to a web service to get theme information, so that it is easy to keep the rails and WP sides in sync.<\/p>\n\n<p>It is designed to be used when a Rails application wishes to contain WordPress content. This allows the WordPress pages\nto directly use the styles of the Rails application so that it will always match, even when the Rails app changes.<\/p>\n\n<p>It is also useful when the header of the page changes, for instance, if new menu items can appear depending on the state of the\napplication.<\/p>\n\n<p>And finally, if you want to POST back to the Rails app (for instance, to log in), you need the CSRF to be set in the page's header,\nand that needs to come from the Rails session.<\/p>\n\n<p>NOTE: This might take some tweaking depending on the theme you are using. It successfully works with the default 2011 theme\nand the Hybrid theme.<\/p>\n\n<p>It requires an entry point in your Rails controller that returns three things:\n1. a section that is put in the header to load stylesheets ",
                "uid": "34620"
            },
            "1.0.2": {
                "name": "wordpress\/rails-theme",
                "version": "1.0.2",
                "version_normalized": "1.0.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/rails-theme.1.0.2.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>This calls back to a web service to get theme information, so that it is easy to keep the rails and WP sides in sync.<\/p>\n\n<p>It is designed to be used when a Rails application wishes to contain WordPress content. This allows the WordPress pages\nto directly use the styles of the Rails application so that it will always match, even when the Rails app changes.<\/p>\n\n<p>It is also useful when the header of the page changes, for instance, if new menu items can appear depending on the state of the\napplication.<\/p>\n\n<p>And finally, if you want to POST back to the Rails app (for instance, to log in), you need the CSRF to be set in the page's header,\nand that needs to come from the Rails session.<\/p>\n\n<p>NOTE: This might take some tweaking depending on the theme you are using. It successfully works with the default 2011 theme\nand the Hybrid theme.<\/p>\n\n<p>It requires an entry point in your Rails controller that returns three things:\n1. a section that is put in the header to load stylesheets ",
                "uid": "34619"
            },
            "1.1.0": {
                "name": "wordpress\/rails-theme",
                "version": "1.1.0",
                "version_normalized": "1.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/rails-theme.1.1.0.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>This calls back to a web service to get theme information, so that it is easy to keep the rails and WP sides in sync.<\/p>\n\n<p>It is designed to be used when a Rails application wishes to contain WordPress content. This allows the WordPress pages\nto directly use the styles of the Rails application so that it will always match, even when the Rails app changes.<\/p>\n\n<p>It is also useful when the header of the page changes, for instance, if new menu items can appear depending on the state of the\napplication.<\/p>\n\n<p>And finally, if you want to POST back to the Rails app (for instance, to log in), you need the CSRF to be set in the page's header,\nand that needs to come from the Rails session.<\/p>\n\n<p>NOTE: This might take some tweaking depending on the theme you are using. It successfully works with the default 2011 theme\nand the Hybrid theme.<\/p>\n\n<p>It requires an entry point in your Rails controller that returns three things:\n1. a section that is put in the header to load stylesheets ",
                "uid": "34618"
            },
            "1.1.1": {
                "name": "wordpress\/rails-theme",
                "version": "1.1.1",
                "version_normalized": "1.1.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/rails-theme.1.1.1.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>This calls back to a web service to get theme information, so that it is easy to keep the rails and WP sides in sync.<\/p>\n\n<p>It is designed to be used when a Rails application wishes to contain WordPress content. This allows the WordPress pages\nto directly use the styles of the Rails application so that it will always match, even when the Rails app changes.<\/p>\n\n<p>It is also useful when the header of the page changes, for instance, if new menu items can appear depending on the state of the\napplication.<\/p>\n\n<p>And finally, if you want to POST back to the Rails app (for instance, to log in), you need the CSRF to be set in the page's header,\nand that needs to come from the Rails session.<\/p>\n\n<p>NOTE: This might take some tweaking depending on the theme you are using. It successfully works with the default 2011 theme\nand the Hybrid theme.<\/p>\n\n<p>It requires an entry point in your Rails controller that returns three things:\n1. a section that is put in the header to load stylesheets ",
                "uid": "116484"
            }
        }
    }
}