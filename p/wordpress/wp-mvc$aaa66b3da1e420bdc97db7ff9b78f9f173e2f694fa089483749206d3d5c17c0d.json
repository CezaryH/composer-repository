{
    "packages": {
        "wordpress\/wp-mvc": {
            "1.0.0": {
                "name": "wordpress\/wp-mvc",
                "version": "1.0.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-mvc.1.0.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP MVC is a WordPress plugin that allows developers to use a MVC framework to create plugins. It is a full-fledged framework with architecture that's similar to that of CakePHP or Ruby on Rails. Developers can consequently use it to rapidly build sites that take advantage of both WordPress's large native functionality and all of the many advantages of an MVC framework.<\/p>\n\n<p>WordPress supports a number of specific content types natively, but setting up custom post types and all of the necessary related functionality (public views, administrative management, associations, etc) is typically more time-consuming than doing the equivalent work in an MVC framework. The resulting code and database structure is significantly less graceful than the MVC equivalent, too.<\/p>\n\n<p>WP MVC fills this gap. The basic idea is that you create an app\/ directory that contains a file structure similar to other MVC frameworks (controllers\/, helpers\/, models\/, views\/, etc) and set up models, views, and c",
                "uid": "49361"
            },
            "1.0.1": {
                "name": "wordpress\/wp-mvc",
                "version": "1.0.1",
                "version_normalized": "1.0.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-mvc.1.0.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP MVC is a WordPress plugin that allows developers to use a MVC framework to create plugins. It is a full-fledged framework with architecture that's similar to that of CakePHP or Ruby on Rails. Developers can consequently use it to rapidly build sites that take advantage of both WordPress's large native functionality and all of the many advantages of an MVC framework.<\/p>\n\n<p>WordPress supports a number of specific content types natively, but setting up custom post types and all of the necessary related functionality (public views, administrative management, associations, etc) is typically more time-consuming than doing the equivalent work in an MVC framework. The resulting code and database structure is significantly less graceful than the MVC equivalent, too.<\/p>\n\n<p>WP MVC fills this gap. The basic idea is that you create an app\/ directory that contains a file structure similar to other MVC frameworks (controllers\/, helpers\/, models\/, views\/, etc) and set up models, views, and c",
                "uid": "49360"
            },
            "1.1": {
                "name": "wordpress\/wp-mvc",
                "version": "1.1",
                "version_normalized": "1.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-mvc.1.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP MVC is a WordPress plugin that allows developers to use a MVC framework to create plugins. It is a full-fledged framework with architecture that's similar to that of CakePHP or Ruby on Rails. Developers can consequently use it to rapidly build sites that take advantage of both WordPress's large native functionality and all of the many advantages of an MVC framework.<\/p>\n\n<p>WordPress supports a number of specific content types natively, but setting up custom post types and all of the necessary related functionality (public views, administrative management, associations, etc) is typically more time-consuming than doing the equivalent work in an MVC framework. The resulting code and database structure is significantly less graceful than the MVC equivalent, too.<\/p>\n\n<p>WP MVC fills this gap. The basic idea is that you create an app\/ directory that contains a file structure similar to other MVC frameworks (controllers\/, helpers\/, models\/, views\/, etc) and set up models, views, and c",
                "uid": "49359"
            },
            "1.1.1": {
                "name": "wordpress\/wp-mvc",
                "version": "1.1.1",
                "version_normalized": "1.1.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-mvc.1.1.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP MVC is a WordPress plugin that allows developers to use a MVC framework to create plugins. It is a full-fledged framework with architecture that's similar to that of CakePHP or Ruby on Rails. Developers can consequently use it to rapidly build sites that take advantage of both WordPress's large native functionality and all of the many advantages of an MVC framework.<\/p>\n\n<p>WordPress supports a number of specific content types natively, but setting up custom post types and all of the necessary related functionality (public views, administrative management, associations, etc) is typically more time-consuming than doing the equivalent work in an MVC framework. The resulting code and database structure is significantly less graceful than the MVC equivalent, too.<\/p>\n\n<p>WP MVC fills this gap. The basic idea is that you create an app\/ directory that contains a file structure similar to other MVC frameworks (controllers\/, helpers\/, models\/, views\/, etc) and set up models, views, and c",
                "uid": "49358"
            },
            "1.1.2": {
                "name": "wordpress\/wp-mvc",
                "version": "1.1.2",
                "version_normalized": "1.1.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-mvc.1.1.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP MVC is a WordPress plugin that allows developers to use a MVC framework to create plugins. It is a full-fledged framework with architecture that's similar to that of CakePHP or Ruby on Rails. Developers can consequently use it to rapidly build sites that take advantage of both WordPress's large native functionality and all of the many advantages of an MVC framework.<\/p>\n\n<p>WordPress supports a number of specific content types natively, but setting up custom post types and all of the necessary related functionality (public views, administrative management, associations, etc) is typically more time-consuming than doing the equivalent work in an MVC framework. The resulting code and database structure is significantly less graceful than the MVC equivalent, too.<\/p>\n\n<p>WP MVC fills this gap. The basic idea is that you create an app\/ directory that contains a file structure similar to other MVC frameworks (controllers\/, helpers\/, models\/, views\/, etc) and set up models, views, and c",
                "uid": "49357"
            },
            "1.1.3": {
                "name": "wordpress\/wp-mvc",
                "version": "1.1.3",
                "version_normalized": "1.1.3.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-mvc.1.1.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP MVC is a WordPress plugin that allows developers to use a MVC framework to create plugins. It is a full-fledged framework with architecture that's similar to that of CakePHP or Ruby on Rails. Developers can consequently use it to rapidly build sites that take advantage of both WordPress's large native functionality and all of the many advantages of an MVC framework.<\/p>\n\n<p>WordPress supports a number of specific content types natively, but setting up custom post types and all of the necessary related functionality (public views, administrative management, associations, etc) is typically more time-consuming than doing the equivalent work in an MVC framework. The resulting code and database structure is significantly less graceful than the MVC equivalent, too.<\/p>\n\n<p>WP MVC fills this gap. The basic idea is that you create an app\/ directory that contains a file structure similar to other MVC frameworks (controllers\/, helpers\/, models\/, views\/, etc) and set up models, views, and c",
                "uid": "49356"
            },
            "1.1.4": {
                "name": "wordpress\/wp-mvc",
                "version": "1.1.4",
                "version_normalized": "1.1.4.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-mvc.1.1.4.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP MVC is a WordPress plugin that allows developers to use a MVC framework to create plugins. It is a full-fledged framework with architecture that's similar to that of CakePHP or Ruby on Rails. Developers can consequently use it to rapidly build sites that take advantage of both WordPress's large native functionality and all of the many advantages of an MVC framework.<\/p>\n\n<p>WordPress supports a number of specific content types natively, but setting up custom post types and all of the necessary related functionality (public views, administrative management, associations, etc) is typically more time-consuming than doing the equivalent work in an MVC framework. The resulting code and database structure is significantly less graceful than the MVC equivalent, too.<\/p>\n\n<p>WP MVC fills this gap. The basic idea is that you create an app\/ directory that contains a file structure similar to other MVC frameworks (controllers\/, helpers\/, models\/, views\/, etc) and set up models, views, and c",
                "uid": "49355"
            },
            "1.1.5": {
                "name": "wordpress\/wp-mvc",
                "version": "1.1.5",
                "version_normalized": "1.1.5.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-mvc.1.1.5.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP MVC is a WordPress plugin that allows developers to use a MVC framework to create plugins. It is a full-fledged framework with architecture that's similar to that of CakePHP or Ruby on Rails. Developers can consequently use it to rapidly build sites that take advantage of both WordPress's large native functionality and all of the many advantages of an MVC framework.<\/p>\n\n<p>WordPress supports a number of specific content types natively, but setting up custom post types and all of the necessary related functionality (public views, administrative management, associations, etc) is typically more time-consuming than doing the equivalent work in an MVC framework. The resulting code and database structure is significantly less graceful than the MVC equivalent, too.<\/p>\n\n<p>WP MVC fills this gap. The basic idea is that you create an app\/ directory that contains a file structure similar to other MVC frameworks (controllers\/, helpers\/, models\/, views\/, etc) and set up models, views, and c",
                "uid": "49354"
            },
            "1.2": {
                "name": "wordpress\/wp-mvc",
                "version": "1.2",
                "version_normalized": "1.2.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-mvc.1.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>WP MVC is a WordPress plugin that allows developers to use a MVC framework to create plugins. It is a full-fledged framework with architecture that's similar to that of CakePHP or Ruby on Rails. Developers can consequently use it to rapidly build sites that take advantage of both WordPress's large native functionality and all of the many advantages of an MVC framework.<\/p>\n\n<p>WordPress supports a number of specific content types natively, but setting up custom post types and all of the necessary related functionality (public views, administrative management, associations, etc) is typically more time-consuming than doing the equivalent work in an MVC framework. The resulting code and database structure is significantly less graceful than the MVC equivalent, too.<\/p>\n\n<p>WP MVC fills this gap. The basic idea is that you create an app\/ directory that contains a file structure similar to other MVC frameworks (controllers\/, helpers\/, models\/, views\/, etc) and set up models, views, and c",
                "uid": "49352"
            }
        }
    }
}