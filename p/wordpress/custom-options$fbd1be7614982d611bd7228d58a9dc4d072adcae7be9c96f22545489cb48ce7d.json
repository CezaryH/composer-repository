{
    "packages": {
        "wordpress\/custom-options": {
            "1.0": {
                "name": "wordpress\/custom-options",
                "version": "1.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/custom-options.1.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Allows you to create custom options that you can easily update via the <code>Options<\/code> administration panel and also allows you to use mentioned options in your theme using a simple PHP function:<\/p>\n\n<pre><code>get_custom_option ( $slug [, $default_value, $field ] )<\/code><\/pre>\n\n<p>By default, only Administrators can change Custom Options, however you can use the filter <code>gsp_custom_options_capability<\/code> to change that. For example, if you wish to allow Editors to use Custom Options you can add this to your functions.php file:<\/p>\n\n<pre><code>function custom_options_capability ($capability) {\n    return &#039;publish_pages&#039;;\n}\nadd_filter ( &#039;gsp_custom_options_capability&#039;, &#039;custom_options_capability&#039; );<\/code><\/pre>\n\n<p>Very simple, yet efficient.<\/p>",
                "uid": "31405"
            },
            "1.1": {
                "name": "wordpress\/custom-options",
                "version": "1.1",
                "version_normalized": "1.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/custom-options.1.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Allows you to create custom options that you can easily update via the <code>Options<\/code> administration panel and also allows you to use mentioned options in your theme using a simple PHP function:<\/p>\n\n<pre><code>get_custom_option ( $slug [, $default_value, $field ] )<\/code><\/pre>\n\n<p>By default, only Administrators can change Custom Options, however you can use the filter <code>gsp_custom_options_capability<\/code> to change that. For example, if you wish to allow Editors to use Custom Options you can add this to your functions.php file:<\/p>\n\n<pre><code>function custom_options_capability ($capability) {\n    return &#039;publish_pages&#039;;\n}\nadd_filter ( &#039;gsp_custom_options_capability&#039;, &#039;custom_options_capability&#039; );<\/code><\/pre>\n\n<p>Very simple, yet efficient.<\/p>",
                "uid": "31404"
            },
            "1.2": {
                "name": "wordpress\/custom-options",
                "version": "1.2",
                "version_normalized": "1.2.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/custom-options.1.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Allows you to create custom options that you can easily update via the <code>Options<\/code> administration panel and also allows you to use mentioned options in your theme using a simple PHP function:<\/p>\n\n<pre><code>get_custom_option ( $slug [, $default_value, $field ] )<\/code><\/pre>\n\n<p>By default, only Administrators can change Custom Options, however you can use the filter <code>gsp_custom_options_capability<\/code> to change that. For example, if you wish to allow Editors to use Custom Options you can add this to your functions.php file:<\/p>\n\n<pre><code>function custom_options_capability ($capability) {\n    return &#039;publish_pages&#039;;\n}\nadd_filter ( &#039;gsp_custom_options_capability&#039;, &#039;custom_options_capability&#039; );<\/code><\/pre>\n\n<p>Very simple, yet efficient.<\/p>",
                "uid": "31403"
            }
        }
    }
}