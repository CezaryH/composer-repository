{
    "packages": {
        "wordpress\/wp-include-file": {
            "1.9.10": {
                "name": "wordpress\/wp-include-file",
                "version": "1.9.10",
                "version_normalized": "1.9.10.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-include-file.1.9.10.23.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h3>Why do you need WP Include File?<\/h3>\n\n<p>WP Include File is needed because any PHP code you type within the tinyMCE will not be rendered when the post content is displayed. Hence instead of having to create templates for each specific task\/post, you can just create localized specific files and just include them in the post content using WP Include File.<\/p>\n\n<p>Furthermore it becomes handy when applying specific styles to certain posts that are not required by the rest of the site. Just enclose the style definitions in the style tags, save it in a file and include it in the specific post using WP Include File. Hence you save on bandwidth and load times by not loading unnecessary style definitions where they are not needed.<\/p>\n\n<h3>Invoking WP Include File using the Shortcode within the tinyMCE<\/h3>\n\n<p>WP Include File can be invoked using the Shortcode <code>[include]<\/code>. The Shortcode accepts four attributes: <code>file<\/code>, <code>path<\/code>, <code>masterpath<\/code> and ",
                "uid": "79744"
            },
            "1.9.12": {
                "name": "wordpress\/wp-include-file",
                "version": "1.9.12",
                "version_normalized": "1.9.12.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-include-file.1.9.12.22.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h3>Why do you need WP Include File?<\/h3>\n\n<p>WP Include File is needed because any PHP code you type within the tinyMCE will not be rendered when the post content is displayed. Hence instead of having to create templates for each specific task\/post, you can just create localized specific files and just include them in the post content using WP Include File.<\/p>\n\n<p>Furthermore it becomes handy when applying specific styles to certain posts that are not required by the rest of the site. Just enclose the style definitions in the style tags, save it in a file and include it in the specific post using WP Include File. Hence you save on bandwidth and load times by not loading unnecessary style definitions where they are not needed.<\/p>\n\n<h3>Invoking WP Include File using the Shortcode within the tinyMCE<\/h3>\n\n<p>WP Include File can be invoked using the Shortcode <code>[include]<\/code>. The Shortcode accepts four attributes: <code>file<\/code>, <code>path<\/code>, <code>masterpath<\/code> and ",
                "uid": "79743"
            },
            "2.10.10": {
                "name": "wordpress\/wp-include-file",
                "version": "2.10.10",
                "version_normalized": "2.10.10.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-include-file.2.10.10.10.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h3>Why do you need WP Include File?<\/h3>\n\n<p>WP Include File is needed because any PHP code you type within the tinyMCE will not be rendered when the post content is displayed. Hence instead of having to create templates for each specific task\/post, you can just create localized specific files and just include them in the post content using WP Include File.<\/p>\n\n<p>Furthermore it becomes handy when applying specific styles to certain posts that are not required by the rest of the site. Just enclose the style definitions in the style tags, save it in a file and include it in the specific post using WP Include File. Hence you save on bandwidth and load times by not loading unnecessary style definitions where they are not needed.<\/p>\n\n<h3>Invoking WP Include File using the Shortcode within the tinyMCE<\/h3>\n\n<p>WP Include File can be invoked using the Shortcode <code>[include]<\/code>. The Shortcode accepts four attributes: <code>file<\/code>, <code>path<\/code>, <code>masterpath<\/code> and ",
                "uid": "79742"
            },
            "3.1": {
                "name": "wordpress\/wp-include-file",
                "version": "3.1",
                "version_normalized": "3.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-include-file.3.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h3>Why do you need WP Include File?<\/h3>\n\n<p>WP Include File is needed because any PHP code you type within the tinyMCE will not be rendered when the post content is displayed. Hence instead of having to create templates for each specific task\/post, you can just create localized specific files and just include them in the post content using WP Include File.<\/p>\n\n<p>Furthermore it becomes handy when applying specific styles to certain posts that are not required by the rest of the site. Just enclose the style definitions in the style tags, save it in a file and include it in the specific post using WP Include File. Hence you save on bandwidth and load times by not loading unnecessary style definitions where they are not needed.<\/p>\n\n<h3>Invoking WP Include File using the Shortcode within the tinyMCE<\/h3>\n\n<p>WP Include File can be invoked using the Shortcode <code>[include]<\/code>. The Shortcode accepts four attributes: <code>file<\/code>, <code>path<\/code>, <code>masterpath<\/code> and ",
                "uid": "79741"
            }
        }
    }
}