{
    "packages": {
        "wordpress\/ssl-insecure-content-fixer": {
            "1.0.0": {
                "name": "wordpress\/ssl-insecure-content-fixer",
                "version": "1.0.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ssl-insecure-content-fixer.1.0.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Fix some common problems with insecure content on pages using SSL. Mostly, the fixes are CSS and JavaScript links that don't use SSL. How it does this is described in <a href=\"http:\/\/snippets.webaware.com.au\/snippets\/cleaning-up-wordpress-plugin-script-and-stylesheet-loads-over-ssl\/\">this blog post<\/a>.<\/p>\n\n<p>It is very lightweight, so it doesn't impact on performance, but that also means it doesn't catch everything. Some fixes need a bigger hammer, like the <a href=\"http:\/\/wordpress.org\/extend\/plugins\/wordpress-https\/\">WordPress HTTPS<\/a> plugin. If your problem is small, a small solution like this one might fit better.<\/p>\n\n<p><strong>Current fixes:<\/strong><\/p>\n\n<ul>\n<li>scripts that are registered using wp_register_script or wp_enqueue_script<\/li>\n<li>stylesheets that are registered using wp_register_style or wp_enqueue_style<\/li>\n<li>images and other media loaded by calling wp_get_attachment_image(), wp_get_attachment_image_src(), etc.<\/li>\n<li>the stylesheet loaded by the <a",
                "uid": "26384"
            },
            "1.1.0": {
                "name": "wordpress\/ssl-insecure-content-fixer",
                "version": "1.1.0",
                "version_normalized": "1.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ssl-insecure-content-fixer.1.1.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Fix some common problems with insecure content on pages using SSL. Mostly, the fixes are CSS and JavaScript links that don't use SSL. How it does this is described in <a href=\"http:\/\/snippets.webaware.com.au\/snippets\/cleaning-up-wordpress-plugin-script-and-stylesheet-loads-over-ssl\/\">this blog post<\/a>.<\/p>\n\n<p>It is very lightweight, so it doesn't impact on performance, but that also means it doesn't catch everything. Some fixes need a bigger hammer, like the <a href=\"http:\/\/wordpress.org\/extend\/plugins\/wordpress-https\/\">WordPress HTTPS<\/a> plugin. If your problem is small, a small solution like this one might fit better.<\/p>\n\n<p><strong>Current fixes:<\/strong><\/p>\n\n<ul>\n<li>scripts that are registered using wp_register_script or wp_enqueue_script<\/li>\n<li>stylesheets that are registered using wp_register_style or wp_enqueue_style<\/li>\n<li>images and other media loaded by calling wp_get_attachment_image(), wp_get_attachment_image_src(), etc.<\/li>\n<li>the stylesheet loaded by the <a",
                "uid": "26383"
            },
            "1.2.0": {
                "name": "wordpress\/ssl-insecure-content-fixer",
                "version": "1.2.0",
                "version_normalized": "1.2.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ssl-insecure-content-fixer.1.2.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Fix some common problems with insecure content on pages using SSL. Mostly, the fixes are CSS and JavaScript links that don't use SSL. How it does this is described in <a href=\"http:\/\/snippets.webaware.com.au\/snippets\/cleaning-up-wordpress-plugin-script-and-stylesheet-loads-over-ssl\/\">this blog post<\/a>.<\/p>\n\n<p>It is very lightweight, so it doesn't impact on performance, but that also means it doesn't catch everything. Some fixes need a bigger hammer, like the <a href=\"http:\/\/wordpress.org\/extend\/plugins\/wordpress-https\/\">WordPress HTTPS<\/a> plugin. If your problem is small, a small solution like this one might fit better.<\/p>\n\n<p><strong>Current fixes:<\/strong><\/p>\n\n<ul>\n<li>scripts that are registered using wp_register_script or wp_enqueue_script<\/li>\n<li>stylesheets that are registered using wp_register_style or wp_enqueue_style<\/li>\n<li>images and other media loaded by calling wp_get_attachment_image(), wp_get_attachment_image_src(), etc.<\/li>\n<li>the stylesheet loaded by the <a",
                "uid": "26382"
            },
            "1.3.0": {
                "name": "wordpress\/ssl-insecure-content-fixer",
                "version": "1.3.0",
                "version_normalized": "1.3.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ssl-insecure-content-fixer.1.3.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Fix some common problems with insecure content on pages using SSL. Mostly, the fixes are CSS and JavaScript links that don't use SSL. How it does this is described in <a href=\"http:\/\/snippets.webaware.com.au\/snippets\/cleaning-up-wordpress-plugin-script-and-stylesheet-loads-over-ssl\/\">this blog post<\/a>.<\/p>\n\n<p>It is very lightweight, so it doesn't impact on performance, but that also means it doesn't catch everything. Some fixes need a bigger hammer, like the <a href=\"http:\/\/wordpress.org\/extend\/plugins\/wordpress-https\/\">WordPress HTTPS<\/a> plugin. If your problem is small, a small solution like this one might fit better.<\/p>\n\n<p><strong>Current fixes:<\/strong><\/p>\n\n<ul>\n<li>scripts that are registered using wp_register_script or wp_enqueue_script<\/li>\n<li>stylesheets that are registered using wp_register_style or wp_enqueue_style<\/li>\n<li>images and other media loaded by calling wp_get_attachment_image(), wp_get_attachment_image_src(), etc.<\/li>\n<li>the stylesheet loaded by the <a",
                "uid": "26381"
            },
            "1.4.0": {
                "name": "wordpress\/ssl-insecure-content-fixer",
                "version": "1.4.0",
                "version_normalized": "1.4.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ssl-insecure-content-fixer.1.4.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Fix some common problems with insecure content on pages using SSL. Mostly, the fixes are CSS and JavaScript links that don't use SSL. How it does this is described in <a href=\"http:\/\/snippets.webaware.com.au\/snippets\/cleaning-up-wordpress-plugin-script-and-stylesheet-loads-over-ssl\/\">this blog post<\/a>.<\/p>\n\n<p>It is very lightweight, so it doesn't impact on performance, but that also means it doesn't catch everything. Some fixes need a bigger hammer, like the <a href=\"http:\/\/wordpress.org\/extend\/plugins\/wordpress-https\/\">WordPress HTTPS<\/a> plugin. If your problem is small, a small solution like this one might fit better.<\/p>\n\n<p><strong>Current fixes:<\/strong><\/p>\n\n<ul>\n<li>scripts that are registered using wp_register_script or wp_enqueue_script<\/li>\n<li>stylesheets that are registered using wp_register_style or wp_enqueue_style<\/li>\n<li>images and other media loaded by calling wp_get_attachment_image(), wp_get_attachment_image_src(), etc.<\/li>\n<li>the stylesheet loaded by the <a",
                "uid": "26380"
            },
            "1.4.1": {
                "name": "wordpress\/ssl-insecure-content-fixer",
                "version": "1.4.1",
                "version_normalized": "1.4.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ssl-insecure-content-fixer.1.4.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Fix some common problems with insecure content on pages using SSL. Mostly, the fixes are CSS and JavaScript links that don't use SSL. How it does this is described in <a href=\"http:\/\/snippets.webaware.com.au\/snippets\/cleaning-up-wordpress-plugin-script-and-stylesheet-loads-over-ssl\/\">this blog post<\/a>.<\/p>\n\n<p>It is very lightweight, so it doesn't impact on performance, but that also means it doesn't catch everything. Some fixes need a bigger hammer, like the <a href=\"http:\/\/wordpress.org\/extend\/plugins\/wordpress-https\/\">WordPress HTTPS<\/a> plugin. If your problem is small, a small solution like this one might fit better.<\/p>\n\n<p><strong>Current fixes:<\/strong><\/p>\n\n<ul>\n<li>scripts that are registered using wp_register_script or wp_enqueue_script<\/li>\n<li>stylesheets that are registered using wp_register_style or wp_enqueue_style<\/li>\n<li>images and other media loaded by calling wp_get_attachment_image(), wp_get_attachment_image_src(), etc.<\/li>\n<li>the stylesheet loaded by the <a",
                "uid": "26379"
            },
            "1.5.0": {
                "name": "wordpress\/ssl-insecure-content-fixer",
                "version": "1.5.0",
                "version_normalized": "1.5.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ssl-insecure-content-fixer.1.5.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Fix some common problems with insecure content on pages using SSL. Mostly, the fixes are CSS and JavaScript links that don't use SSL. How it does this is described in <a href=\"http:\/\/snippets.webaware.com.au\/snippets\/cleaning-up-wordpress-plugin-script-and-stylesheet-loads-over-ssl\/\">this blog post<\/a>.<\/p>\n\n<p>It is very lightweight, so it doesn't impact on performance, but that also means it doesn't catch everything. Some fixes need a bigger hammer, like the <a href=\"http:\/\/wordpress.org\/extend\/plugins\/wordpress-https\/\">WordPress HTTPS<\/a> plugin. If your problem is small, a small solution like this one might fit better.<\/p>\n\n<p><strong>Current fixes:<\/strong><\/p>\n\n<ul>\n<li>scripts that are registered using wp_register_script or wp_enqueue_script<\/li>\n<li>stylesheets that are registered using wp_register_style or wp_enqueue_style<\/li>\n<li>images and other media loaded by calling wp_get_attachment_image(), wp_get_attachment_image_src(), etc.<\/li>\n<li>the stylesheet loaded by the <a",
                "uid": "26378"
            },
            "1.6.0": {
                "name": "wordpress\/ssl-insecure-content-fixer",
                "version": "1.6.0",
                "version_normalized": "1.6.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ssl-insecure-content-fixer.1.6.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Fix some common problems with insecure content on pages using SSL. Mostly, the fixes are CSS and JavaScript links that don't use SSL. How it does this is described in <a href=\"http:\/\/snippets.webaware.com.au\/snippets\/cleaning-up-wordpress-plugin-script-and-stylesheet-loads-over-ssl\/\">this blog post<\/a>.<\/p>\n\n<p>It is very lightweight, so it doesn't impact on performance, but that also means it doesn't catch everything. Some fixes need a bigger hammer, like the <a href=\"http:\/\/wordpress.org\/extend\/plugins\/wordpress-https\/\">WordPress HTTPS<\/a> plugin. If your problem is small, a small solution like this one might fit better.<\/p>\n\n<p><strong>Current fixes:<\/strong><\/p>\n\n<ul>\n<li>scripts that are registered using wp_register_script or wp_enqueue_script<\/li>\n<li>stylesheets that are registered using wp_register_style or wp_enqueue_style<\/li>\n<li>images and other media loaded by calling wp_get_attachment_image(), wp_get_attachment_image_src(), etc.<\/li>\n<li>the stylesheet loaded by the <a",
                "uid": "26377"
            },
            "1.7.0": {
                "name": "wordpress\/ssl-insecure-content-fixer",
                "version": "1.7.0",
                "version_normalized": "1.7.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ssl-insecure-content-fixer.1.7.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Fix some common problems with insecure content on pages using SSL. Mostly, the fixes are CSS and JavaScript links that don't use SSL. How it does this is described in <a href=\"http:\/\/snippets.webaware.com.au\/snippets\/cleaning-up-wordpress-plugin-script-and-stylesheet-loads-over-ssl\/\">this blog post<\/a>.<\/p>\n\n<p>It is very lightweight, so it doesn't impact on performance, but that also means it doesn't catch everything. Some fixes need a bigger hammer, like the <a href=\"http:\/\/wordpress.org\/extend\/plugins\/wordpress-https\/\">WordPress HTTPS<\/a> plugin. If your problem is small, a small solution like this one might fit better.<\/p>\n\n<p><strong>Current fixes:<\/strong><\/p>\n\n<ul>\n<li>scripts that are registered using wp_register_script or wp_enqueue_script<\/li>\n<li>stylesheets that are registered using wp_register_style or wp_enqueue_style<\/li>\n<li>images and other media loaded by calling wp_get_attachment_image(), wp_get_attachment_image_src(), etc.<\/li>\n<li>the stylesheet loaded by the <a",
                "uid": "26376"
            },
            "1.7.1": {
                "name": "wordpress\/ssl-insecure-content-fixer",
                "version": "1.7.1",
                "version_normalized": "1.7.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ssl-insecure-content-fixer.1.7.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Fix some common problems with insecure content on pages using SSL. Mostly, the fixes are CSS and JavaScript links that don't use SSL. How it does this is described in <a href=\"http:\/\/snippets.webaware.com.au\/snippets\/cleaning-up-wordpress-plugin-script-and-stylesheet-loads-over-ssl\/\">this blog post<\/a>.<\/p>\n\n<p>It is very lightweight, so it doesn't impact on performance, but that also means it doesn't catch everything. Some fixes need a bigger hammer, like the <a href=\"http:\/\/wordpress.org\/extend\/plugins\/wordpress-https\/\">WordPress HTTPS<\/a> plugin. If your problem is small, a small solution like this one might fit better.<\/p>\n\n<p><strong>Current fixes:<\/strong><\/p>\n\n<ul>\n<li>scripts that are registered using wp_register_script or wp_enqueue_script<\/li>\n<li>stylesheets that are registered using wp_register_style or wp_enqueue_style<\/li>\n<li>images and other media loaded by calling wp_get_attachment_image(), wp_get_attachment_image_src(), etc.<\/li>\n<li>the stylesheet loaded by the <a",
                "uid": "26375"
            }
        }
    }
}