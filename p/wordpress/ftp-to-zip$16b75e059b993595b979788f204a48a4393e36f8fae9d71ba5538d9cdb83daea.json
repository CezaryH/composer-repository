{
    "packages": {
        "wordpress\/ftp-to-zip": {
            "1.0": {
                "name": "wordpress\/ftp-to-zip",
                "version": "1.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ftp-to-zip.1.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>FTP to Zip takes browser based FTP backup of WordPress plus other folders. Basically it uses PHP ZipArchive class ZipArchive(); which can not be used without shell access directly. The first script checks and shows up your WordPress Installation root. Depending upon the size of your FTP content, it can taken few minutes to few hours to complete the process and will create a zip file on the root where the script is made to run. On the next screen, you will get the option to download it to your computer as well.<\/p>\n\n<p>FTP to Zip works nicely on Rackspace Cloud Sites, it should work on any LAMP server (Server component are \u0096 Linux Apache PHP MySQL) with good hardware backend.<\/p>\n\n<h4>Advanced Usages<\/h4>\n\n<p>'backup.php' is the important file. I have added comments for easy understanding. The important points are given here for reference :<\/p>\n\n<h4>Specific Functions<\/h4>\n\n<p>For the file 'backup.php' :<\/p>\n\n<p>Line 23 : $sourcefolder is set to root. You can change it yourself.\nLin",
                "uid": "20538"
            },
            "1.5": {
                "name": "wordpress\/ftp-to-zip",
                "version": "1.5",
                "version_normalized": "1.5.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ftp-to-zip.1.5.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>FTP to Zip takes browser based FTP backup of WordPress plus other folders. Basically it uses PHP ZipArchive class ZipArchive(); which can not be used without shell access directly. The first script checks and shows up your WordPress Installation root. Depending upon the size of your FTP content, it can taken few minutes to few hours to complete the process and will create a zip file on the root where the script is made to run. On the next screen, you will get the option to download it to your computer as well.<\/p>\n\n<p>FTP to Zip works nicely on Rackspace Cloud Sites, it should work on any LAMP server (Server component are \u0096 Linux Apache PHP MySQL) with good hardware backend.<\/p>\n\n<h4>Advanced Usages<\/h4>\n\n<p>'backup.php' is the important file. I have added comments for easy understanding. The important points are given here for reference :<\/p>\n\n<h4>Specific Functions<\/h4>\n\n<p>For the file 'backup.php' :<\/p>\n\n<p>Line 23 : $sourcefolder is set to root. You can change it yourself.\nLin",
                "uid": "20537"
            },
            "1.5.1": {
                "name": "wordpress\/ftp-to-zip",
                "version": "1.5.1",
                "version_normalized": "1.5.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ftp-to-zip.1.5.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>FTP to Zip takes browser based FTP backup of WordPress plus other folders. Basically it uses PHP ZipArchive class ZipArchive(); which can not be used without shell access directly. The first script checks and shows up your WordPress Installation root. Depending upon the size of your FTP content, it can taken few minutes to few hours to complete the process and will create a zip file on the root where the script is made to run. On the next screen, you will get the option to download it to your computer as well.<\/p>\n\n<p>FTP to Zip works nicely on Rackspace Cloud Sites, it should work on any LAMP server (Server component are \u0096 Linux Apache PHP MySQL) with good hardware backend.<\/p>\n\n<h4>Advanced Usages<\/h4>\n\n<p>'backup.php' is the important file. I have added comments for easy understanding. The important points are given here for reference :<\/p>\n\n<h4>Specific Functions<\/h4>\n\n<p>For the file 'backup.php' :<\/p>\n\n<p>Line 23 : $sourcefolder is set to root. You can change it yourself.\nLin",
                "uid": "20536"
            },
            "1.6": {
                "name": "wordpress\/ftp-to-zip",
                "version": "1.6",
                "version_normalized": "1.6.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ftp-to-zip.1.6.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>FTP to Zip takes browser based FTP backup of WordPress plus other folders. Basically it uses PHP ZipArchive class ZipArchive(); which can not be used without shell access directly. The first script checks and shows up your WordPress Installation root. Depending upon the size of your FTP content, it can taken few minutes to few hours to complete the process and will create a zip file on the root where the script is made to run. On the next screen, you will get the option to download it to your computer as well.<\/p>\n\n<p>FTP to Zip works nicely on Rackspace Cloud Sites, it should work on any LAMP server (Server component are \u0096 Linux Apache PHP MySQL) with good hardware backend.<\/p>\n\n<h4>Advanced Usages<\/h4>\n\n<p>'backup.php' is the important file. I have added comments for easy understanding. The important points are given here for reference :<\/p>\n\n<h4>Specific Functions<\/h4>\n\n<p>For the file 'backup.php' :<\/p>\n\n<p>Line 23 : $sourcefolder is set to root. You can change it yourself.\nLin",
                "uid": "20535"
            },
            "1.7": {
                "name": "wordpress\/ftp-to-zip",
                "version": "1.7",
                "version_normalized": "1.7.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ftp-to-zip.1.7.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>FTP to Zip takes browser based FTP backup of WordPress plus other folders. Basically it uses PHP ZipArchive class ZipArchive(); which can not be used without shell access directly. The first script checks and shows up your WordPress Installation root. Depending upon the size of your FTP content, it can taken few minutes to few hours to complete the process and will create a zip file on the root where the script is made to run. On the next screen, you will get the option to download it to your computer as well.<\/p>\n\n<p>FTP to Zip works nicely on Rackspace Cloud Sites, it should work on any LAMP server (Server component are \u0096 Linux Apache PHP MySQL) with good hardware backend.<\/p>\n\n<h4>Advanced Usages<\/h4>\n\n<p>'backup.php' is the important file. I have added comments for easy understanding. The important points are given here for reference :<\/p>\n\n<h4>Specific Functions<\/h4>\n\n<p>For the file 'backup.php' :<\/p>\n\n<p>Line 23 : $sourcefolder is set to root. You can change it yourself.\nLin",
                "uid": "20534"
            }
        }
    }
}