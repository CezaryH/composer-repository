{
    "packages": {
        "wordpress\/ban-hammer": {
            "1.0": {
                "name": "wordpress\/ban-hammer",
                "version": "1.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.1.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88835"
            },
            "1.1": {
                "name": "wordpress\/ban-hammer",
                "version": "1.1",
                "version_normalized": "1.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.1.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88834"
            },
            "1.2": {
                "name": "wordpress\/ban-hammer",
                "version": "1.2",
                "version_normalized": "1.2.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.1.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88833"
            },
            "1.3": {
                "name": "wordpress\/ban-hammer",
                "version": "1.3",
                "version_normalized": "1.3.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.1.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88832"
            },
            "1.4": {
                "name": "wordpress\/ban-hammer",
                "version": "1.4",
                "version_normalized": "1.4.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.1.4.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88831"
            },
            "1.5": {
                "name": "wordpress\/ban-hammer",
                "version": "1.5",
                "version_normalized": "1.5.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.1.5.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88830"
            },
            "1.5.1": {
                "name": "wordpress\/ban-hammer",
                "version": "1.5.1",
                "version_normalized": "1.5.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.1.5.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88829"
            },
            "1.5.2": {
                "name": "wordpress\/ban-hammer",
                "version": "1.5.2",
                "version_normalized": "1.5.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.1.5.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88828"
            },
            "1.6": {
                "name": "wordpress\/ban-hammer",
                "version": "1.6",
                "version_normalized": "1.6.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.1.6.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88827"
            },
            "1.6.1": {
                "name": "wordpress\/ban-hammer",
                "version": "1.6.1",
                "version_normalized": "1.6.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.1.6.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88826"
            },
            "1.7": {
                "name": "wordpress\/ban-hammer",
                "version": "1.7",
                "version_normalized": "1.7.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.1.7.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88825"
            },
            "2.0": {
                "name": "wordpress\/ban-hammer",
                "version": "2.0",
                "version_normalized": "2.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.2.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88824"
            },
            "2.3": {
                "name": "wordpress\/ban-hammer",
                "version": "2.3",
                "version_normalized": "2.3.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ban-hammer.2.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>We've all had this problem.  A group of spammers from mail.ru are registering to your blog, but you want to keep registration open.  How do you kill the spammers without bothering your clientele?  While you could edit your <code>functions.php<\/code> and block the domain, once you get past a few bad eggs, you have to escalate.<\/p>\n\n<p>Ban Hammer does that for you by preventing unwanted users from registering.<\/p>\n\n<p>On a single install of WP, instead of using its own database table, Ban Hammer pulls from your list of blacklisted emails from the Comment Blacklist feature, native to WordPress.  Since emails never equal IP addresses, it simply skips over and ignores them. On a network instance, there's a network wide setting for banned emails and domains. This means you only have <em>one<\/em> place to update and maintain your blacklist.  When a blacklisted user attempts to register, they get a customizable message that they cannot register.<\/p>\n\n<p>Ban Hammer <em>no longer<\/em> uses St",
                "uid": "88823"
            }
        }
    }
}