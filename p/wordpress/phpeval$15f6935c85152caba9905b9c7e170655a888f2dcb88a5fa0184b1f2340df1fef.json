{
    "packages": {
        "wordpress\/phpeval": {
            "1.0.0": {
                "name": "wordpress\/phpeval",
                "version": "1.0.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/phpeval.1.0.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>The PHPEval Plugin is a Wordpress plugin which allows users to write php code inside of their pages. Embedded php code will be executed when the post is shown. In doing so, the plugin offers the possibility to utilize dynamic content inside of posts. In contrast to other plugins with the same aim, this on is focus on security.  Here's a features list:<\/p>\n\n<ul>\n<li>Easy to setup and configure<\/li>\n<li>Simple syntax<\/li>\n<li>Central administration of code<\/li>\n<li>More coming up soon!<\/li>\n<\/ul>\n\n<p>YES, I do consider feature requests, and that is what makes this plugin work. The discussions go here: <a href=\"http:\/\/code.google.com\/p\/phpeval\/\" title=\"Technical Support\">Technical Support<\/a><\/p>",
                "uid": "73274"
            },
            "1.0.1": {
                "name": "wordpress\/phpeval",
                "version": "1.0.1",
                "version_normalized": "1.0.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/phpeval.1.0.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>The PHPEval Plugin is a Wordpress plugin which allows users to write php code inside of their pages. Embedded php code will be executed when the post is shown. In doing so, the plugin offers the possibility to utilize dynamic content inside of posts. In contrast to other plugins with the same aim, this on is focus on security.  Here's a features list:<\/p>\n\n<ul>\n<li>Easy to setup and configure<\/li>\n<li>Simple syntax<\/li>\n<li>Central administration of code<\/li>\n<li>More coming up soon!<\/li>\n<\/ul>\n\n<p>YES, I do consider feature requests, and that is what makes this plugin work. The discussions go here: <a href=\"http:\/\/code.google.com\/p\/phpeval\/\" title=\"Technical Support\">Technical Support<\/a><\/p>",
                "uid": "73273"
            },
            "1.0.2": {
                "name": "wordpress\/phpeval",
                "version": "1.0.2",
                "version_normalized": "1.0.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/phpeval.1.0.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>The PHPEval Plugin is a Wordpress plugin which allows users to write php code inside of their pages. Embedded php code will be executed when the post is shown. In doing so, the plugin offers the possibility to utilize dynamic content inside of posts. In contrast to other plugins with the same aim, this on is focus on security.  Here's a features list:<\/p>\n\n<ul>\n<li>Easy to setup and configure<\/li>\n<li>Simple syntax<\/li>\n<li>Central administration of code<\/li>\n<li>More coming up soon!<\/li>\n<\/ul>\n\n<p>YES, I do consider feature requests, and that is what makes this plugin work. The discussions go here: <a href=\"http:\/\/code.google.com\/p\/phpeval\/\" title=\"Technical Support\">Technical Support<\/a><\/p>",
                "uid": "73272"
            }
        }
    }
}