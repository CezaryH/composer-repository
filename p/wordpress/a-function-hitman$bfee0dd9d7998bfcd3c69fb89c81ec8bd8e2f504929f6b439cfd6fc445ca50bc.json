{
    "packages": {
        "wordpress\/a-function-hitman": {
            "1.00": {
                "name": "wordpress\/a-function-hitman",
                "version": "1.00",
                "version_normalized": "1.00.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/a-function-hitman.1.00.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Some of the built in functions (e.g., <code>plugin_dir_url<\/code> and <code>plugins_url<\/code>) may not work properly if you have non-standard WP installation with <code>wp-content<\/code> as a symbolic link. This plugin lets you redefine such functions without having to edit the WP core files.<\/p>\n\n<p>This plugin is meant for advanced users or plugin developers. The reason for developing it was that some of my favorite plugins (term-management-tools, subscribe2, wp-dtree-30) didn't work properly when I had a non-standard WP installation. My installation consists of a blog assets folder containing all the stuff that I want to keep unchanged acrross multiple WP versions, and it contains <code>wp-content<\/code> as well. But unfortunately, the functions <code>plugin_dir_url<\/code> and <code>plugins_url<\/code> that many plugin authors make use of give unexpected results in this setup. If I modified the plugin code, it would be impossible to updrade the plugins automatically (without obli",
                "uid": "28877"
            },
            "1.10": {
                "name": "wordpress\/a-function-hitman",
                "version": "1.10",
                "version_normalized": "1.10.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/a-function-hitman.1.10.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Some of the built in functions (e.g., <code>plugin_dir_url<\/code> and <code>plugins_url<\/code>) may not work properly if you have non-standard WP installation with <code>wp-content<\/code> as a symbolic link. This plugin lets you redefine such functions without having to edit the WP core files.<\/p>\n\n<p>This plugin is meant for advanced users or plugin developers. The reason for developing it was that some of my favorite plugins (term-management-tools, subscribe2, wp-dtree-30) didn't work properly when I had a non-standard WP installation. My installation consists of a blog assets folder containing all the stuff that I want to keep unchanged acrross multiple WP versions, and it contains <code>wp-content<\/code> as well. But unfortunately, the functions <code>plugin_dir_url<\/code> and <code>plugins_url<\/code> that many plugin authors make use of give unexpected results in this setup. If I modified the plugin code, it would be impossible to updrade the plugins automatically (without obli",
                "uid": "28876"
            },
            "1.20": {
                "name": "wordpress\/a-function-hitman",
                "version": "1.20",
                "version_normalized": "1.20.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/a-function-hitman.1.20.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Some of the built in functions (e.g., <code>plugin_dir_url<\/code> and <code>plugins_url<\/code>) may not work properly if you have non-standard WP installation with <code>wp-content<\/code> as a symbolic link. This plugin lets you redefine such functions without having to edit the WP core files.<\/p>\n\n<p>This plugin is meant for advanced users or plugin developers. The reason for developing it was that some of my favorite plugins (term-management-tools, subscribe2, wp-dtree-30) didn't work properly when I had a non-standard WP installation. My installation consists of a blog assets folder containing all the stuff that I want to keep unchanged acrross multiple WP versions, and it contains <code>wp-content<\/code> as well. But unfortunately, the functions <code>plugin_dir_url<\/code> and <code>plugins_url<\/code> that many plugin authors make use of give unexpected results in this setup. If I modified the plugin code, it would be impossible to updrade the plugins automatically (without obli",
                "uid": "28875"
            },
            "1.21": {
                "name": "wordpress\/a-function-hitman",
                "version": "1.21",
                "version_normalized": "1.21.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/a-function-hitman.1.21.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Some of the built in functions (e.g., <code>plugin_dir_url<\/code> and <code>plugins_url<\/code>) may not work properly if you have non-standard WP installation with <code>wp-content<\/code> as a symbolic link. This plugin lets you redefine such functions without having to edit the WP core files.<\/p>\n\n<p>This plugin is meant for advanced users or plugin developers. The reason for developing it was that some of my favorite plugins (term-management-tools, subscribe2, wp-dtree-30) didn't work properly when I had a non-standard WP installation. My installation consists of a blog assets folder containing all the stuff that I want to keep unchanged acrross multiple WP versions, and it contains <code>wp-content<\/code> as well. But unfortunately, the functions <code>plugin_dir_url<\/code> and <code>plugins_url<\/code> that many plugin authors make use of give unexpected results in this setup. If I modified the plugin code, it would be impossible to updrade the plugins automatically (without obli",
                "uid": "28874"
            },
            "1.30": {
                "name": "wordpress\/a-function-hitman",
                "version": "1.30",
                "version_normalized": "1.30.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/a-function-hitman.1.30.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Some of the built in functions (e.g., <code>plugin_dir_url<\/code> and <code>plugins_url<\/code>) may not work properly if you have non-standard WP installation with <code>wp-content<\/code> as a symbolic link. This plugin lets you redefine such functions without having to edit the WP core files.<\/p>\n\n<p>This plugin is meant for advanced users or plugin developers. The reason for developing it was that some of my favorite plugins (term-management-tools, subscribe2, wp-dtree-30) didn't work properly when I had a non-standard WP installation. My installation consists of a blog assets folder containing all the stuff that I want to keep unchanged acrross multiple WP versions, and it contains <code>wp-content<\/code> as well. But unfortunately, the functions <code>plugin_dir_url<\/code> and <code>plugins_url<\/code> that many plugin authors make use of give unexpected results in this setup. If I modified the plugin code, it would be impossible to updrade the plugins automatically (without obli",
                "uid": "28873"
            }
        }
    }
}