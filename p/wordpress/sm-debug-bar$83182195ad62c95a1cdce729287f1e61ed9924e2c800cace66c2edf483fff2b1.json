{
    "packages": {
        "wordpress\/sm-debug-bar": {
            "1.0.0": {
                "name": "wordpress\/sm-debug-bar",
                "version": "1.0.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/sm-debug-bar.1.0.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>EASY TO USE! Developers who build plugins and themes everyday know the constant hassle of finding the proper place to print out PHP variables and objects to see whats going on. This plugin will help you with that process by giving you a simple function to call, that automatically appends a printed version of your variable\/object\/array and sends it to a hidden DIV that only loads when the admin bar loads, and only loads when logged in with administrative permissions in wordpress.<\/p>\n\n<p>So whats the catch? Well, using utilities like this always prooves difficult because knowing how it works is often complex. We have simplified the process as much as possible. Here is an example:<\/p>\n\n<p>USAGE -&#62; Quickstart: Open any php file that you know is being loaded and add \"dbug($GLOBALS)\" to print all global variables.\n1. You built a new array thats holding some custom meta data loaded on the page.\n2. For some reason, you think its empty, or the values are not acting like you expect.\n3. N",
                "uid": "47596"
            },
            "1.0.1": {
                "name": "wordpress\/sm-debug-bar",
                "version": "1.0.1",
                "version_normalized": "1.0.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/sm-debug-bar.1.0.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>EASY TO USE! Developers who build plugins and themes everyday know the constant hassle of finding the proper place to print out PHP variables and objects to see whats going on. This plugin will help you with that process by giving you a simple function to call, that automatically appends a printed version of your variable\/object\/array and sends it to a hidden DIV that only loads when the admin bar loads, and only loads when logged in with administrative permissions in wordpress.<\/p>\n\n<p>So whats the catch? Well, using utilities like this always prooves difficult because knowing how it works is often complex. We have simplified the process as much as possible. Here is an example:<\/p>\n\n<p>USAGE -&#62; Quickstart: Open any php file that you know is being loaded and add \"dbug($GLOBALS)\" to print all global variables.\n1. You built a new array thats holding some custom meta data loaded on the page.\n2. For some reason, you think its empty, or the values are not acting like you expect.\n3. N",
                "uid": "47592"
            },
            "1.0.2": {
                "name": "wordpress\/sm-debug-bar",
                "version": "1.0.2",
                "version_normalized": "1.0.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/sm-debug-bar.1.0.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>EASY TO USE! Developers who build plugins and themes everyday know the constant hassle of finding the proper place to print out PHP variables and objects to see whats going on. This plugin will help you with that process by giving you a simple function to call, that automatically appends a printed version of your variable\/object\/array and sends it to a hidden DIV that only loads when the admin bar loads, and only loads when logged in with administrative permissions in wordpress.<\/p>\n\n<p>So whats the catch? Well, using utilities like this always prooves difficult because knowing how it works is often complex. We have simplified the process as much as possible. Here is an example:<\/p>\n\n<p>USAGE -&#62; Quickstart: Open any php file that you know is being loaded and add \"dbug($GLOBALS)\" to print all global variables.\n1. You built a new array thats holding some custom meta data loaded on the page.\n2. For some reason, you think its empty, or the values are not acting like you expect.\n3. N",
                "uid": "47591"
            },
            "1.0.3": {
                "name": "wordpress\/sm-debug-bar",
                "version": "1.0.3",
                "version_normalized": "1.0.3.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/sm-debug-bar.1.0.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>EASY TO USE! Developers who build plugins and themes everyday know the constant hassle of finding the proper place to print out PHP variables and objects to see whats going on. This plugin will help you with that process by giving you a simple function to call, that automatically appends a printed version of your variable\/object\/array and sends it to a hidden DIV that only loads when the admin bar loads, and only loads when logged in with administrative permissions in wordpress.<\/p>\n\n<p>So whats the catch? Well, using utilities like this always prooves difficult because knowing how it works is often complex. We have simplified the process as much as possible. Here is an example:<\/p>\n\n<p>USAGE -&#62; Quickstart: Open any php file that you know is being loaded and add \"dbug($GLOBALS)\" to print all global variables.\n1. You built a new array thats holding some custom meta data loaded on the page.\n2. For some reason, you think its empty, or the values are not acting like you expect.\n3. N",
                "uid": "47590"
            },
            "1.1.0": {
                "name": "wordpress\/sm-debug-bar",
                "version": "1.1.0",
                "version_normalized": "1.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/sm-debug-bar.1.1.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>EASY TO USE! Developers who build plugins and themes everyday know the constant hassle of finding the proper place to print out PHP variables and objects to see whats going on. This plugin will help you with that process by giving you a simple function to call, that automatically appends a printed version of your variable\/object\/array and sends it to a hidden DIV that only loads when the admin bar loads, and only loads when logged in with administrative permissions in wordpress.<\/p>\n\n<p>So whats the catch? Well, using utilities like this always prooves difficult because knowing how it works is often complex. We have simplified the process as much as possible. Here is an example:<\/p>\n\n<p>USAGE -&#62; Quickstart: Open any php file that you know is being loaded and add \"dbug($GLOBALS)\" to print all global variables.\n1. You built a new array thats holding some custom meta data loaded on the page.\n2. For some reason, you think its empty, or the values are not acting like you expect.\n3. N",
                "uid": "47589"
            },
            "1.1.1": {
                "name": "wordpress\/sm-debug-bar",
                "version": "1.1.1",
                "version_normalized": "1.1.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/sm-debug-bar.1.1.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>EASY TO USE! Developers who build plugins and themes everyday know the constant hassle of finding the proper place to print out PHP variables and objects to see whats going on. This plugin will help you with that process by giving you a simple function to call, that automatically appends a printed version of your variable\/object\/array and sends it to a hidden DIV that only loads when the admin bar loads, and only loads when logged in with administrative permissions in wordpress.<\/p>\n\n<p>So whats the catch? Well, using utilities like this always prooves difficult because knowing how it works is often complex. We have simplified the process as much as possible. Here is an example:<\/p>\n\n<p>USAGE -&#62; Quickstart: Open any php file that you know is being loaded and add \"dbug($GLOBALS)\" to print all global variables.\n1. You built a new array thats holding some custom meta data loaded on the page.\n2. For some reason, you think its empty, or the values are not acting like you expect.\n3. N",
                "uid": "47588"
            },
            "1.1.2": {
                "name": "wordpress\/sm-debug-bar",
                "version": "1.1.2",
                "version_normalized": "1.1.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/sm-debug-bar.1.1.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>EASY TO USE! Developers who build plugins and themes everyday know the constant hassle of finding the proper place to print out PHP variables and objects to see whats going on. This plugin will help you with that process by giving you a simple function to call, that automatically appends a printed version of your variable\/object\/array and sends it to a hidden DIV that only loads when the admin bar loads, and only loads when logged in with administrative permissions in wordpress.<\/p>\n\n<p>So whats the catch? Well, using utilities like this always prooves difficult because knowing how it works is often complex. We have simplified the process as much as possible. Here is an example:<\/p>\n\n<p>USAGE -&#62; Quickstart: Open any php file that you know is being loaded and add \"dbug($GLOBALS)\" to print all global variables.\n1. You built a new array thats holding some custom meta data loaded on the page.\n2. For some reason, you think its empty, or the values are not acting like you expect.\n3. N",
                "uid": "47587"
            },
            "1.2": {
                "name": "wordpress\/sm-debug-bar",
                "version": "1.2",
                "version_normalized": "1.2.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/sm-debug-bar.1.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>EASY TO USE! Developers who build plugins and themes everyday know the constant hassle of finding the proper place to print out PHP variables and objects to see whats going on. This plugin will help you with that process by giving you a simple function to call, that automatically appends a printed version of your variable\/object\/array and sends it to a hidden DIV that only loads when the admin bar loads, and only loads when logged in with administrative permissions in wordpress.<\/p>\n\n<p>So whats the catch? Well, using utilities like this always prooves difficult because knowing how it works is often complex. We have simplified the process as much as possible. Here is an example:<\/p>\n\n<p>USAGE -&#62; Quickstart: Open any php file that you know is being loaded and add \"dbug($GLOBALS)\" to print all global variables.\n1. You built a new array thats holding some custom meta data loaded on the page.\n2. For some reason, you think its empty, or the values are not acting like you expect.\n3. N",
                "uid": "47586"
            }
        }
    }
}