{
    "packages": {
        "wordpress\/console": {
            "1.4": {
                "name": "wordpress\/console",
                "version": "1.4",
                "version_normalized": "1.4.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/console.1.4.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Debug PHP variables in the JavaScript console (Chrome &#38; Firebug). Use instead of PHP's native var_dump() function.<\/p>\n\n<p>Usage: <code>&#60;?php console( $var ); ?&#62;<\/code><\/p>\n\n<p>You can also tag a variable; Usage: <code>&#60;?php console( $var, $tag ); ?&#62;<\/code>.<\/p>\n\n<p>Debug with <a href=\"http:\/\/krumo.sourceforge.net\/\" title=\"Krumo\">Krumo<\/a>: <code>&#60;?php console( $var, $tag, true ); ?&#62;<\/code>.<\/p>\n\n<p>To globally enable Krumo, add: <code>&#60;?php define( 'CONSOLE_KRUMO', true ); ?&#62;<\/code> to functions.php OR wp-config.php.<\/p>\n\n<p>Shorthand: <code>&#60;?php c( $var ); ?&#62;<\/code>.<\/p>\n\n<p>You must be a logged-in Admin to see debug messages.<\/p>",
                "uid": "32635"
            },
            "1.5": {
                "name": "wordpress\/console",
                "version": "1.5",
                "version_normalized": "1.5.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/console.1.5.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Debug PHP variables in the JavaScript console (Chrome &#38; Firebug). Use instead of PHP's native var_dump() function.<\/p>\n\n<p>Usage: <code>&#60;?php console( $var ); ?&#62;<\/code><\/p>\n\n<p>You can also tag a variable; Usage: <code>&#60;?php console( $var, $tag ); ?&#62;<\/code>.<\/p>\n\n<p>Debug with <a href=\"http:\/\/krumo.sourceforge.net\/\" title=\"Krumo\">Krumo<\/a>: <code>&#60;?php console( $var, $tag, true ); ?&#62;<\/code>.<\/p>\n\n<p>To globally enable Krumo, add: <code>&#60;?php define( 'CONSOLE_KRUMO', true ); ?&#62;<\/code> to functions.php OR wp-config.php.<\/p>\n\n<p>Shorthand: <code>&#60;?php c( $var ); ?&#62;<\/code>.<\/p>\n\n<p>You must be a logged-in Admin to see debug messages.<\/p>",
                "uid": "32634"
            },
            "1.6": {
                "name": "wordpress\/console",
                "version": "1.6",
                "version_normalized": "1.6.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/console.1.6.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Debug PHP variables in the JavaScript console (Chrome &#38; Firebug). Use instead of PHP's native var_dump() function.<\/p>\n\n<p>Usage: <code>&#60;?php console( $var ); ?&#62;<\/code><\/p>\n\n<p>You can also tag a variable; Usage: <code>&#60;?php console( $var, $tag ); ?&#62;<\/code>.<\/p>\n\n<p>Debug with <a href=\"http:\/\/krumo.sourceforge.net\/\" title=\"Krumo\">Krumo<\/a>: <code>&#60;?php console( $var, $tag, true ); ?&#62;<\/code>.<\/p>\n\n<p>To globally enable Krumo, add: <code>&#60;?php define( 'CONSOLE_KRUMO', true ); ?&#62;<\/code> to functions.php OR wp-config.php.<\/p>\n\n<p>Shorthand: <code>&#60;?php c( $var ); ?&#62;<\/code>.<\/p>\n\n<p>You must be a logged-in Admin to see debug messages.<\/p>",
                "uid": "32633"
            },
            "1.7": {
                "name": "wordpress\/console",
                "version": "1.7",
                "version_normalized": "1.7.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/console.1.7.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Debug PHP variables in the JavaScript console (Chrome &#38; Firebug). Use instead of PHP's native var_dump() function.<\/p>\n\n<p>Usage: <code>&#60;?php console( $var ); ?&#62;<\/code><\/p>\n\n<p>You can also tag a variable; Usage: <code>&#60;?php console( $var, $tag ); ?&#62;<\/code>.<\/p>\n\n<p>Debug with <a href=\"http:\/\/krumo.sourceforge.net\/\" title=\"Krumo\">Krumo<\/a>: <code>&#60;?php console( $var, $tag, true ); ?&#62;<\/code>.<\/p>\n\n<p>To globally enable Krumo, add: <code>&#60;?php define( 'CONSOLE_KRUMO', true ); ?&#62;<\/code> to functions.php OR wp-config.php.<\/p>\n\n<p>Shorthand: <code>&#60;?php c( $var ); ?&#62;<\/code>.<\/p>\n\n<p>You must be a logged-in Admin to see debug messages.<\/p>",
                "uid": "32632"
            },
            "1.7.1": {
                "name": "wordpress\/console",
                "version": "1.7.1",
                "version_normalized": "1.7.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/console.1.7.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Debug PHP variables in the JavaScript console (Chrome &#38; Firebug). Use instead of PHP's native var_dump() function.<\/p>\n\n<p>Usage: <code>&#60;?php console( $var ); ?&#62;<\/code><\/p>\n\n<p>You can also tag a variable; Usage: <code>&#60;?php console( $var, $tag ); ?&#62;<\/code>.<\/p>\n\n<p>Debug with <a href=\"http:\/\/krumo.sourceforge.net\/\" title=\"Krumo\">Krumo<\/a>: <code>&#60;?php console( $var, $tag, true ); ?&#62;<\/code>.<\/p>\n\n<p>To globally enable Krumo, add: <code>&#60;?php define( 'CONSOLE_KRUMO', true ); ?&#62;<\/code> to functions.php OR wp-config.php.<\/p>\n\n<p>Shorthand: <code>&#60;?php c( $var ); ?&#62;<\/code>.<\/p>\n\n<p>You must be a logged-in Admin to see debug messages.<\/p>",
                "uid": "32631"
            },
            "1.7.2": {
                "name": "wordpress\/console",
                "version": "1.7.2",
                "version_normalized": "1.7.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/console.1.7.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>Debug PHP variables in the JavaScript console (Chrome &#38; Firebug). Use instead of PHP's native var_dump() function.<\/p>\n\n<p>Usage: <code>&#60;?php console( $var ); ?&#62;<\/code><\/p>\n\n<p>You can also tag a variable; Usage: <code>&#60;?php console( $var, $tag ); ?&#62;<\/code>.<\/p>\n\n<p>Debug with <a href=\"http:\/\/krumo.sourceforge.net\/\" title=\"Krumo\">Krumo<\/a>: <code>&#60;?php console( $var, $tag, true ); ?&#62;<\/code>.<\/p>\n\n<p>To globally enable Krumo, add: <code>&#60;?php define( 'CONSOLE_KRUMO', true ); ?&#62;<\/code> to functions.php OR wp-config.php.<\/p>\n\n<p>Shorthand: <code>&#60;?php c( $var ); ?&#62;<\/code>.<\/p>\n\n<p>You must be a logged-in Admin to see debug messages.<\/p>",
                "uid": "32630"
            }
        }
    }
}