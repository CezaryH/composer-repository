{
    "packages": {
        "wordpress\/php-enkoder": {
            "1.0": {
                "name": "wordpress\/php-enkoder",
                "version": "1.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/php-enkoder.1.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>PHPEnkoder is a port of the excellent <a href=\"http:\/\/hivelogic.com\/enkoder\">Hivelogic\nEnkoder<\/a> to PHP and, more specifically,\nto Wordpress. It is used to display text in a way that users can see\nand bots can't.<\/p>\n\n<p>The encoding system is directly and unabashedly stolen from the\nBSD-licensed source of Hivelogic Enkoder, which works by randomly\nencoding a piece of text and sending to the browser self-evaluating\nJavascript that will generate the original text. This works in two\nways: first, a bot must first have a fairly complete Javascript\nimplementation (in particular, it must have <code>eval<\/code>); second, the\ndecoding process can be made arbitrarily computationally\nintensive. This is similar to the idea of charging computational\npayments to send e-mail, only this is actually implemented.<\/p>\n\n<p>By default, PHPEnkoder scrambles e-mails in plaintext and in <code>mailto:<\/code>\nlinks.  It additionally provides a shortcode for manual scrambling,\nused like so: <code>[enkode t",
                "uid": "98050"
            },
            "1.10": {
                "name": "wordpress\/php-enkoder",
                "version": "1.10",
                "version_normalized": "1.10.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/php-enkoder.1.10.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>PHPEnkoder is a port of the excellent <a href=\"http:\/\/hivelogic.com\/enkoder\">Hivelogic\nEnkoder<\/a> to PHP and, more specifically,\nto Wordpress. It is used to display text in a way that users can see\nand bots can't.<\/p>\n\n<p>The encoding system is directly and unabashedly stolen from the\nBSD-licensed source of Hivelogic Enkoder, which works by randomly\nencoding a piece of text and sending to the browser self-evaluating\nJavascript that will generate the original text. This works in two\nways: first, a bot must first have a fairly complete Javascript\nimplementation (in particular, it must have <code>eval<\/code>); second, the\ndecoding process can be made arbitrarily computationally\nintensive. This is similar to the idea of charging computational\npayments to send e-mail, only this is actually implemented.<\/p>\n\n<p>By default, PHPEnkoder scrambles e-mails in plaintext and in <code>mailto:<\/code>\nlinks.  It additionally provides a shortcode for manual scrambling,\nused like so: <code>[enkode t",
                "uid": "98041"
            },
            "1.11": {
                "name": "wordpress\/php-enkoder",
                "version": "1.11",
                "version_normalized": "1.11.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/php-enkoder.1.11.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>PHPEnkoder is a port of the excellent <a href=\"http:\/\/hivelogic.com\/enkoder\">Hivelogic\nEnkoder<\/a> to PHP and, more specifically,\nto Wordpress. It is used to display text in a way that users can see\nand bots can't.<\/p>\n\n<p>The encoding system is directly and unabashedly stolen from the\nBSD-licensed source of Hivelogic Enkoder, which works by randomly\nencoding a piece of text and sending to the browser self-evaluating\nJavascript that will generate the original text. This works in two\nways: first, a bot must first have a fairly complete Javascript\nimplementation (in particular, it must have <code>eval<\/code>); second, the\ndecoding process can be made arbitrarily computationally\nintensive. This is similar to the idea of charging computational\npayments to send e-mail, only this is actually implemented.<\/p>\n\n<p>By default, PHPEnkoder scrambles e-mails in plaintext and in <code>mailto:<\/code>\nlinks.  It additionally provides a shortcode for manual scrambling,\nused like so: <code>[enkode t",
                "uid": "98039"
            },
            "1.2": {
                "name": "wordpress\/php-enkoder",
                "version": "1.2",
                "version_normalized": "1.2.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/php-enkoder.1.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>PHPEnkoder is a port of the excellent <a href=\"http:\/\/hivelogic.com\/enkoder\">Hivelogic\nEnkoder<\/a> to PHP and, more specifically,\nto Wordpress. It is used to display text in a way that users can see\nand bots can't.<\/p>\n\n<p>The encoding system is directly and unabashedly stolen from the\nBSD-licensed source of Hivelogic Enkoder, which works by randomly\nencoding a piece of text and sending to the browser self-evaluating\nJavascript that will generate the original text. This works in two\nways: first, a bot must first have a fairly complete Javascript\nimplementation (in particular, it must have <code>eval<\/code>); second, the\ndecoding process can be made arbitrarily computationally\nintensive. This is similar to the idea of charging computational\npayments to send e-mail, only this is actually implemented.<\/p>\n\n<p>By default, PHPEnkoder scrambles e-mails in plaintext and in <code>mailto:<\/code>\nlinks.  It additionally provides a shortcode for manual scrambling,\nused like so: <code>[enkode t",
                "uid": "98049"
            },
            "1.3": {
                "name": "wordpress\/php-enkoder",
                "version": "1.3",
                "version_normalized": "1.3.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/php-enkoder.1.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>PHPEnkoder is a port of the excellent <a href=\"http:\/\/hivelogic.com\/enkoder\">Hivelogic\nEnkoder<\/a> to PHP and, more specifically,\nto Wordpress. It is used to display text in a way that users can see\nand bots can't.<\/p>\n\n<p>The encoding system is directly and unabashedly stolen from the\nBSD-licensed source of Hivelogic Enkoder, which works by randomly\nencoding a piece of text and sending to the browser self-evaluating\nJavascript that will generate the original text. This works in two\nways: first, a bot must first have a fairly complete Javascript\nimplementation (in particular, it must have <code>eval<\/code>); second, the\ndecoding process can be made arbitrarily computationally\nintensive. This is similar to the idea of charging computational\npayments to send e-mail, only this is actually implemented.<\/p>\n\n<p>By default, PHPEnkoder scrambles e-mails in plaintext and in <code>mailto:<\/code>\nlinks.  It additionally provides a shortcode for manual scrambling,\nused like so: <code>[enkode t",
                "uid": "98048"
            },
            "1.4": {
                "name": "wordpress\/php-enkoder",
                "version": "1.4",
                "version_normalized": "1.4.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/php-enkoder.1.4.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>PHPEnkoder is a port of the excellent <a href=\"http:\/\/hivelogic.com\/enkoder\">Hivelogic\nEnkoder<\/a> to PHP and, more specifically,\nto Wordpress. It is used to display text in a way that users can see\nand bots can't.<\/p>\n\n<p>The encoding system is directly and unabashedly stolen from the\nBSD-licensed source of Hivelogic Enkoder, which works by randomly\nencoding a piece of text and sending to the browser self-evaluating\nJavascript that will generate the original text. This works in two\nways: first, a bot must first have a fairly complete Javascript\nimplementation (in particular, it must have <code>eval<\/code>); second, the\ndecoding process can be made arbitrarily computationally\nintensive. This is similar to the idea of charging computational\npayments to send e-mail, only this is actually implemented.<\/p>\n\n<p>By default, PHPEnkoder scrambles e-mails in plaintext and in <code>mailto:<\/code>\nlinks.  It additionally provides a shortcode for manual scrambling,\nused like so: <code>[enkode t",
                "uid": "98047"
            },
            "1.5": {
                "name": "wordpress\/php-enkoder",
                "version": "1.5",
                "version_normalized": "1.5.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/php-enkoder.1.5.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>PHPEnkoder is a port of the excellent <a href=\"http:\/\/hivelogic.com\/enkoder\">Hivelogic\nEnkoder<\/a> to PHP and, more specifically,\nto Wordpress. It is used to display text in a way that users can see\nand bots can't.<\/p>\n\n<p>The encoding system is directly and unabashedly stolen from the\nBSD-licensed source of Hivelogic Enkoder, which works by randomly\nencoding a piece of text and sending to the browser self-evaluating\nJavascript that will generate the original text. This works in two\nways: first, a bot must first have a fairly complete Javascript\nimplementation (in particular, it must have <code>eval<\/code>); second, the\ndecoding process can be made arbitrarily computationally\nintensive. This is similar to the idea of charging computational\npayments to send e-mail, only this is actually implemented.<\/p>\n\n<p>By default, PHPEnkoder scrambles e-mails in plaintext and in <code>mailto:<\/code>\nlinks.  It additionally provides a shortcode for manual scrambling,\nused like so: <code>[enkode t",
                "uid": "98046"
            },
            "1.6": {
                "name": "wordpress\/php-enkoder",
                "version": "1.6",
                "version_normalized": "1.6.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/php-enkoder.1.6.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>PHPEnkoder is a port of the excellent <a href=\"http:\/\/hivelogic.com\/enkoder\">Hivelogic\nEnkoder<\/a> to PHP and, more specifically,\nto Wordpress. It is used to display text in a way that users can see\nand bots can't.<\/p>\n\n<p>The encoding system is directly and unabashedly stolen from the\nBSD-licensed source of Hivelogic Enkoder, which works by randomly\nencoding a piece of text and sending to the browser self-evaluating\nJavascript that will generate the original text. This works in two\nways: first, a bot must first have a fairly complete Javascript\nimplementation (in particular, it must have <code>eval<\/code>); second, the\ndecoding process can be made arbitrarily computationally\nintensive. This is similar to the idea of charging computational\npayments to send e-mail, only this is actually implemented.<\/p>\n\n<p>By default, PHPEnkoder scrambles e-mails in plaintext and in <code>mailto:<\/code>\nlinks.  It additionally provides a shortcode for manual scrambling,\nused like so: <code>[enkode t",
                "uid": "98045"
            },
            "1.7": {
                "name": "wordpress\/php-enkoder",
                "version": "1.7",
                "version_normalized": "1.7.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/php-enkoder.1.7.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>PHPEnkoder is a port of the excellent <a href=\"http:\/\/hivelogic.com\/enkoder\">Hivelogic\nEnkoder<\/a> to PHP and, more specifically,\nto Wordpress. It is used to display text in a way that users can see\nand bots can't.<\/p>\n\n<p>The encoding system is directly and unabashedly stolen from the\nBSD-licensed source of Hivelogic Enkoder, which works by randomly\nencoding a piece of text and sending to the browser self-evaluating\nJavascript that will generate the original text. This works in two\nways: first, a bot must first have a fairly complete Javascript\nimplementation (in particular, it must have <code>eval<\/code>); second, the\ndecoding process can be made arbitrarily computationally\nintensive. This is similar to the idea of charging computational\npayments to send e-mail, only this is actually implemented.<\/p>\n\n<p>By default, PHPEnkoder scrambles e-mails in plaintext and in <code>mailto:<\/code>\nlinks.  It additionally provides a shortcode for manual scrambling,\nused like so: <code>[enkode t",
                "uid": "98044"
            },
            "1.8": {
                "name": "wordpress\/php-enkoder",
                "version": "1.8",
                "version_normalized": "1.8.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/php-enkoder.1.8.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>PHPEnkoder is a port of the excellent <a href=\"http:\/\/hivelogic.com\/enkoder\">Hivelogic\nEnkoder<\/a> to PHP and, more specifically,\nto Wordpress. It is used to display text in a way that users can see\nand bots can't.<\/p>\n\n<p>The encoding system is directly and unabashedly stolen from the\nBSD-licensed source of Hivelogic Enkoder, which works by randomly\nencoding a piece of text and sending to the browser self-evaluating\nJavascript that will generate the original text. This works in two\nways: first, a bot must first have a fairly complete Javascript\nimplementation (in particular, it must have <code>eval<\/code>); second, the\ndecoding process can be made arbitrarily computationally\nintensive. This is similar to the idea of charging computational\npayments to send e-mail, only this is actually implemented.<\/p>\n\n<p>By default, PHPEnkoder scrambles e-mails in plaintext and in <code>mailto:<\/code>\nlinks.  It additionally provides a shortcode for manual scrambling,\nused like so: <code>[enkode t",
                "uid": "98043"
            },
            "1.9": {
                "name": "wordpress\/php-enkoder",
                "version": "1.9",
                "version_normalized": "1.9.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/php-enkoder.1.9.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>PHPEnkoder is a port of the excellent <a href=\"http:\/\/hivelogic.com\/enkoder\">Hivelogic\nEnkoder<\/a> to PHP and, more specifically,\nto Wordpress. It is used to display text in a way that users can see\nand bots can't.<\/p>\n\n<p>The encoding system is directly and unabashedly stolen from the\nBSD-licensed source of Hivelogic Enkoder, which works by randomly\nencoding a piece of text and sending to the browser self-evaluating\nJavascript that will generate the original text. This works in two\nways: first, a bot must first have a fairly complete Javascript\nimplementation (in particular, it must have <code>eval<\/code>); second, the\ndecoding process can be made arbitrarily computationally\nintensive. This is similar to the idea of charging computational\npayments to send e-mail, only this is actually implemented.<\/p>\n\n<p>By default, PHPEnkoder scrambles e-mails in plaintext and in <code>mailto:<\/code>\nlinks.  It additionally provides a shortcode for manual scrambling,\nused like so: <code>[enkode t",
                "uid": "98042"
            }
        }
    }
}