{
    "packages": {
        "wordpress\/simple-events": {
            "0.1.2": {
                "name": "wordpress\/simple-events",
                "version": "0.1.2",
                "version_normalized": "0.1.2.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/simple-events.0.1.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>If the plugin detects that there is a custom post type registered with a particular name (either 'event' or '*_event'), it steps in and does a number of useful additional things:<\/p>\n\n<ul>\n<li>For front-end queries fetching events, returned posts are sorted chronologically, the oldest first.<\/li>\n<li>For front-end queries fetching events, by default only future events are returned. This can be overridden by setting the custom parameter <code>slt_all_events<\/code> in your posts query to <code>true<\/code>. Alternatively, use <code>slt_past_events<\/code> (set to <code>true<\/code>) to get only past events.<\/li>\n<li>By default events are ordered chronologically. To reverse the order, set <code>slt_reverse_events<\/code> to <code>true<\/code>.<\/li>\n<li>In the admin listing page for events, an 'Event date' column is added.<\/li>\n<li>For particular queries, all actions performed by this plugin can be disabled by setting the custom parameter <code>disable_simple_events<\/code> in your posts quer",
                "uid": "47659"
            },
            "0.1.3": {
                "name": "wordpress\/simple-events",
                "version": "0.1.3",
                "version_normalized": "0.1.3.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/simple-events.0.1.3.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>If the plugin detects that there is a custom post type registered with a particular name (either 'event' or '*_event'), it steps in and does a number of useful additional things:<\/p>\n\n<ul>\n<li>For front-end queries fetching events, returned posts are sorted chronologically, the oldest first.<\/li>\n<li>For front-end queries fetching events, by default only future events are returned. This can be overridden by setting the custom parameter <code>slt_all_events<\/code> in your posts query to <code>true<\/code>. Alternatively, use <code>slt_past_events<\/code> (set to <code>true<\/code>) to get only past events.<\/li>\n<li>By default events are ordered chronologically. To reverse the order, set <code>slt_reverse_events<\/code> to <code>true<\/code>.<\/li>\n<li>In the admin listing page for events, an 'Event date' column is added.<\/li>\n<li>For particular queries, all actions performed by this plugin can be disabled by setting the custom parameter <code>disable_simple_events<\/code> in your posts quer",
                "uid": "47657"
            },
            "0.1.4": {
                "name": "wordpress\/simple-events",
                "version": "0.1.4",
                "version_normalized": "0.1.4.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/simple-events.0.1.4.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>If the plugin detects that there is a custom post type registered with a particular name (either 'event' or '*_event'), it steps in and does a number of useful additional things:<\/p>\n\n<ul>\n<li>For front-end queries fetching events, returned posts are sorted chronologically, the oldest first.<\/li>\n<li>For front-end queries fetching events, by default only future events are returned. This can be overridden by setting the custom parameter <code>slt_all_events<\/code> in your posts query to <code>true<\/code>. Alternatively, use <code>slt_past_events<\/code> (set to <code>true<\/code>) to get only past events.<\/li>\n<li>By default events are ordered chronologically. To reverse the order, set <code>slt_reverse_events<\/code> to <code>true<\/code>.<\/li>\n<li>In the admin listing page for events, an 'Event date' column is added.<\/li>\n<li>For particular queries, all actions performed by this plugin can be disabled by setting the custom parameter <code>disable_simple_events<\/code> in your posts quer",
                "uid": "47656"
            },
            "0.1.5": {
                "name": "wordpress\/simple-events",
                "version": "0.1.5",
                "version_normalized": "0.1.5.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/simple-events.0.1.5.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>If the plugin detects that there is a custom post type registered with a particular name (either 'event' or '*_event'), it steps in and does a number of useful additional things:<\/p>\n\n<ul>\n<li>For front-end queries fetching events, returned posts are sorted chronologically, the oldest first.<\/li>\n<li>For front-end queries fetching events, by default only future events are returned. This can be overridden by setting the custom parameter <code>slt_all_events<\/code> in your posts query to <code>true<\/code>. Alternatively, use <code>slt_past_events<\/code> (set to <code>true<\/code>) to get only past events.<\/li>\n<li>By default events are ordered chronologically. To reverse the order, set <code>slt_reverse_events<\/code> to <code>true<\/code>.<\/li>\n<li>In the admin listing page for events, an 'Event date' column is added.<\/li>\n<li>For particular queries, all actions performed by this plugin can be disabled by setting the custom parameter <code>disable_simple_events<\/code> in your posts quer",
                "uid": "47655"
            },
            "0.1.6": {
                "name": "wordpress\/simple-events",
                "version": "0.1.6",
                "version_normalized": "0.1.6.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/simple-events.0.1.6.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>If the plugin detects that there is a custom post type registered with a particular name (either 'event' or '*_event'), it steps in and does a number of useful additional things:<\/p>\n\n<ul>\n<li>For front-end queries fetching events, returned posts are sorted chronologically, the oldest first.<\/li>\n<li>For front-end queries fetching events, by default only future events are returned. This can be overridden by setting the custom parameter <code>slt_all_events<\/code> in your posts query to <code>true<\/code>. Alternatively, use <code>slt_past_events<\/code> (set to <code>true<\/code>) to get only past events.<\/li>\n<li>By default events are ordered chronologically. To reverse the order, set <code>slt_reverse_events<\/code> to <code>true<\/code>.<\/li>\n<li>In the admin listing page for events, an 'Event date' column is added.<\/li>\n<li>For particular queries, all actions performed by this plugin can be disabled by setting the custom parameter <code>disable_simple_events<\/code> in your posts quer",
                "uid": "47654"
            }
        }
    }
}