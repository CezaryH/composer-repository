{
    "packages": {
        "wordpress\/wp-fail2ban": {
            "1.0": {
                "name": "wordpress\/wp-fail2ban",
                "version": "1.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-fail2ban.1.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p><a href=\"http:\/\/www.fail2ban.org\/\">fail2ban<\/a> is one of the simplest and most effective security measures you can implement to prevent brute-force password-guessing attacks.<\/p>\n\n<p><em>WP fail2ban<\/em> logs all login attempts, whether successful or not, to syslog using LOG_AUTH. To make log parsing as simple as possible <em>WPf2b<\/em> uses the same format as sshd. For example:<\/p>\n\n<pre><code>Oct 17 20:59:54 foobar wordpress(www.example.com)[1234]: Authentication failure for admin from 192.168.0.1\nOct 17 21:00:00 foobar wordpress(www.example.com)[2345]: Accepted password for admin from 192.168.0.1\n<\/code><\/pre>\n\n<p><em>WPf2b<\/em> comes with a <code>fail2ban<\/code> filter, <code>wordpress.conf<\/code>.<\/p>\n\n<p>Requires PHP 5.3 or later.<\/p>",
                "uid": "16369"
            },
            "1.1": {
                "name": "wordpress\/wp-fail2ban",
                "version": "1.1",
                "version_normalized": "1.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-fail2ban.1.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p><a href=\"http:\/\/www.fail2ban.org\/\">fail2ban<\/a> is one of the simplest and most effective security measures you can implement to prevent brute-force password-guessing attacks.<\/p>\n\n<p><em>WP fail2ban<\/em> logs all login attempts, whether successful or not, to syslog using LOG_AUTH. To make log parsing as simple as possible <em>WPf2b<\/em> uses the same format as sshd. For example:<\/p>\n\n<pre><code>Oct 17 20:59:54 foobar wordpress(www.example.com)[1234]: Authentication failure for admin from 192.168.0.1\nOct 17 21:00:00 foobar wordpress(www.example.com)[2345]: Accepted password for admin from 192.168.0.1\n<\/code><\/pre>\n\n<p><em>WPf2b<\/em> comes with a <code>fail2ban<\/code> filter, <code>wordpress.conf<\/code>.<\/p>\n\n<p>Requires PHP 5.3 or later.<\/p>",
                "uid": "16368"
            },
            "1.2": {
                "name": "wordpress\/wp-fail2ban",
                "version": "1.2",
                "version_normalized": "1.2.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-fail2ban.1.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p><a href=\"http:\/\/www.fail2ban.org\/\">fail2ban<\/a> is one of the simplest and most effective security measures you can implement to prevent brute-force password-guessing attacks.<\/p>\n\n<p><em>WP fail2ban<\/em> logs all login attempts, whether successful or not, to syslog using LOG_AUTH. To make log parsing as simple as possible <em>WPf2b<\/em> uses the same format as sshd. For example:<\/p>\n\n<pre><code>Oct 17 20:59:54 foobar wordpress(www.example.com)[1234]: Authentication failure for admin from 192.168.0.1\nOct 17 21:00:00 foobar wordpress(www.example.com)[2345]: Accepted password for admin from 192.168.0.1\n<\/code><\/pre>\n\n<p><em>WPf2b<\/em> comes with a <code>fail2ban<\/code> filter, <code>wordpress.conf<\/code>.<\/p>\n\n<p>Requires PHP 5.3 or later.<\/p>",
                "uid": "16367"
            },
            "1.2.1": {
                "name": "wordpress\/wp-fail2ban",
                "version": "1.2.1",
                "version_normalized": "1.2.1.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-fail2ban.1.2.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p><a href=\"http:\/\/www.fail2ban.org\/\">fail2ban<\/a> is one of the simplest and most effective security measures you can implement to prevent brute-force password-guessing attacks.<\/p>\n\n<p><em>WP fail2ban<\/em> logs all login attempts, whether successful or not, to syslog using LOG_AUTH. To make log parsing as simple as possible <em>WPf2b<\/em> uses the same format as sshd. For example:<\/p>\n\n<pre><code>Oct 17 20:59:54 foobar wordpress(www.example.com)[1234]: Authentication failure for admin from 192.168.0.1\nOct 17 21:00:00 foobar wordpress(www.example.com)[2345]: Accepted password for admin from 192.168.0.1\n<\/code><\/pre>\n\n<p><em>WPf2b<\/em> comes with a <code>fail2ban<\/code> filter, <code>wordpress.conf<\/code>.<\/p>\n\n<p>Requires PHP 5.3 or later.<\/p>",
                "uid": "16366"
            }
        }
    }
}