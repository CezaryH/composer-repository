{
    "packages": {
        "wordpress\/ip-to-country": {
            "0.01": {
                "name": "wordpress\/ip-to-country",
                "version": "0.01",
                "version_normalized": "0.01.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ip-to-country.0.01.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>IP-to-Country is a plugin which doesn't provide any output to users, but which\nmay be used by plugin authors to quickly and easily find, in which country an\nIP address is located.<\/p>\n\n<p>To do so the plugin uses data files from either <a href=\"http:\/\/ip-to-country.webhosting.info\" rel=\"nofollow\">http:\/\/ip-to-country.webhosting.info<\/a>\n(IPv4 only) or <a href=\"http:\/\/software77.net\/geo-ip\/\" rel=\"nofollow\">http:\/\/software77.net\/geo-ip\/<\/a> (both IPv4 and IPv6).\nOther sources are possible as long as they have the same format: CSV file, \nfields enclosed with quotes (\") and separated with comma (,), lines ending\nwith LF (\\n). Five columns:<\/p>\n\n<ul>\n<li>Lower bound of an IP range.<\/li>\n<li>Upper bound of an IP range. Both are represented as one 32-bit integer number,\nsuch as you can get by using funtion ip2long().<\/li>\n<li>2-character country code<\/li>\n<li>3-character country code<\/li>\n<li>Country name<\/li>\n<\/ul>\n\n<p>Note: In order to import IPv6 addresses, IPv4 must be imported first. ",
                "uid": "71177"
            },
            "0.02": {
                "name": "wordpress\/ip-to-country",
                "version": "0.02",
                "version_normalized": "0.02.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ip-to-country.0.02.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>IP-to-Country is a plugin which doesn't provide any output to users, but which\nmay be used by plugin authors to quickly and easily find, in which country an\nIP address is located.<\/p>\n\n<p>To do so the plugin uses data files from either <a href=\"http:\/\/ip-to-country.webhosting.info\" rel=\"nofollow\">http:\/\/ip-to-country.webhosting.info<\/a>\n(IPv4 only) or <a href=\"http:\/\/software77.net\/geo-ip\/\" rel=\"nofollow\">http:\/\/software77.net\/geo-ip\/<\/a> (both IPv4 and IPv6).\nOther sources are possible as long as they have the same format: CSV file, \nfields enclosed with quotes (\") and separated with comma (,), lines ending\nwith LF (\\n). Five columns:<\/p>\n\n<ul>\n<li>Lower bound of an IP range.<\/li>\n<li>Upper bound of an IP range. Both are represented as one 32-bit integer number,\nsuch as you can get by using funtion ip2long().<\/li>\n<li>2-character country code<\/li>\n<li>3-character country code<\/li>\n<li>Country name<\/li>\n<\/ul>\n\n<p>Note: In order to import IPv6 addresses, IPv4 must be imported first. ",
                "uid": "71176"
            },
            "0.03": {
                "name": "wordpress\/ip-to-country",
                "version": "0.03",
                "version_normalized": "0.03.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ip-to-country.0.03.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>IP-to-Country is a plugin which doesn't provide any output to users, but which\nmay be used by plugin authors to quickly and easily find, in which country an\nIP address is located.<\/p>\n\n<p>To do so the plugin uses data files from either <a href=\"http:\/\/ip-to-country.webhosting.info\" rel=\"nofollow\">http:\/\/ip-to-country.webhosting.info<\/a>\n(IPv4 only) or <a href=\"http:\/\/software77.net\/geo-ip\/\" rel=\"nofollow\">http:\/\/software77.net\/geo-ip\/<\/a> (both IPv4 and IPv6).\nOther sources are possible as long as they have the same format: CSV file, \nfields enclosed with quotes (\") and separated with comma (,), lines ending\nwith LF (\\n). Five columns:<\/p>\n\n<ul>\n<li>Lower bound of an IP range.<\/li>\n<li>Upper bound of an IP range. Both are represented as one 32-bit integer number,\nsuch as you can get by using funtion ip2long().<\/li>\n<li>2-character country code<\/li>\n<li>3-character country code<\/li>\n<li>Country name<\/li>\n<\/ul>\n\n<p>Note: In order to import IPv6 addresses, IPv4 must be imported first. ",
                "uid": "71175"
            },
            "0.04": {
                "name": "wordpress\/ip-to-country",
                "version": "0.04",
                "version_normalized": "0.04.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ip-to-country.0.04.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>IP-to-Country is a plugin which doesn't provide any output to users, but which\nmay be used by plugin authors to quickly and easily find, in which country an\nIP address is located.<\/p>\n\n<p>To do so the plugin uses data files from either <a href=\"http:\/\/ip-to-country.webhosting.info\" rel=\"nofollow\">http:\/\/ip-to-country.webhosting.info<\/a>\n(IPv4 only) or <a href=\"http:\/\/software77.net\/geo-ip\/\" rel=\"nofollow\">http:\/\/software77.net\/geo-ip\/<\/a> (both IPv4 and IPv6).\nOther sources are possible as long as they have the same format: CSV file, \nfields enclosed with quotes (\") and separated with comma (,), lines ending\nwith LF (\\n). Five columns:<\/p>\n\n<ul>\n<li>Lower bound of an IP range.<\/li>\n<li>Upper bound of an IP range. Both are represented as one 32-bit integer number,\nsuch as you can get by using funtion ip2long().<\/li>\n<li>2-character country code<\/li>\n<li>3-character country code<\/li>\n<li>Country name<\/li>\n<\/ul>\n\n<p>Note: In order to import IPv6 addresses, IPv4 must be imported first. ",
                "uid": "71174"
            },
            "0.05": {
                "name": "wordpress\/ip-to-country",
                "version": "0.05",
                "version_normalized": "0.05.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/ip-to-country.0.05.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>IP-to-Country is a plugin which doesn't provide any output to users, but which\nmay be used by plugin authors to quickly and easily find, in which country an\nIP address is located.<\/p>\n\n<p>To do so the plugin uses data files from either <a href=\"http:\/\/ip-to-country.webhosting.info\" rel=\"nofollow\">http:\/\/ip-to-country.webhosting.info<\/a>\n(IPv4 only) or <a href=\"http:\/\/software77.net\/geo-ip\/\" rel=\"nofollow\">http:\/\/software77.net\/geo-ip\/<\/a> (both IPv4 and IPv6).\nOther sources are possible as long as they have the same format: CSV file, \nfields enclosed with quotes (\") and separated with comma (,), lines ending\nwith LF (\\n). Five columns:<\/p>\n\n<ul>\n<li>Lower bound of an IP range.<\/li>\n<li>Upper bound of an IP range. Both are represented as one 32-bit integer number,\nsuch as you can get by using funtion ip2long().<\/li>\n<li>2-character country code<\/li>\n<li>3-character country code<\/li>\n<li>Country name<\/li>\n<\/ul>\n\n<p>Note: In order to import IPv6 addresses, IPv4 must be imported first. ",
                "uid": "71173"
            }
        }
    }
}