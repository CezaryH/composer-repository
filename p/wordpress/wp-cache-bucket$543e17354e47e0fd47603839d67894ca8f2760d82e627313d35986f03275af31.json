{
    "packages": {
        "wordpress\/wp-cache-bucket": {
            "1.1": {
                "name": "wordpress\/wp-cache-bucket",
                "version": "1.1",
                "version_normalized": "1.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/wp-cache-bucket.1.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<h4>Please Note:<\/h4>\n\n<p><em>This plugin does <strong>not<\/strong> do anything by itself. It is meant to be a helper class for theme and plugin developers.<\/em><\/p>\n\n<p>Cache bucket uses the built-in WordPress <code>wp_cache<\/code> but contains methods to associate multiple items with a single cache object or 'bucket' without having to stick all of them into a single cache key. This is helpful when you have multiple items that need to be updated when one item is modified.<\/p>\n\n<p>Because the standard cache key used to identify the cached item is dependant on other variables when it's being accessed, there is no easy way to identify all of the related keys that need to expire, and Memcached doesn't provide a way to invalidate a group of data. WP Cache Bucket provides a wrapper around the cache that gives a 'bucket' interface, allowing us to easily expire an entire set of cached objects when one object changes.<\/p>\n\n<h4>Usage:<\/h4>\n\n<p>Use <code>wp_cache_bucket_add()<\/code> to add a cac",
                "uid": "124732"
            }
        }
    }
}