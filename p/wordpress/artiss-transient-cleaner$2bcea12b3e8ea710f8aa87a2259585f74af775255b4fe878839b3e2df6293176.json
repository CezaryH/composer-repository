{
    "packages": {
        "wordpress\/artiss-transient-cleaner": {
            "1.0": {
                "name": "wordpress\/artiss-transient-cleaner",
                "version": "1.0",
                "version_normalized": "1.0.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/artiss-transient-cleaner.1.0.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>\"Transients are a simple and standardized way of storing cached data in the WordPress database temporarily by giving it a custom name and a timeframe after which it will expire and be deleted.\"<\/p>\n\n<p>Unfortunately, expired entries will only be deleted if you attempt to access the transient again. If you don't access the transient then, even though it's expired, WordPress will not remove it. This is <a href=\"http:\/\/core.trac.wordpress.org\/ticket\/20316\" title=\"Ticket #20316\">a known \"issue\"<\/a> and is due to be corrected at some point in the WordPress core code.<\/p>\n\n<p>Why is this a problem? Transients are often used by plugins to \"cache\" data (my own plugins included). Because of the housekeeping problems this means that expired data can be left and build up, resulting in a bloated database table.<\/p>\n\n<p>Meantime, this plugin is the solution, using the same proposed method as the WordPress core change will use. Simply activate the plugin, sit back and enjoy a much cleaner, smalle",
                "uid": "14359"
            },
            "1.1": {
                "name": "wordpress\/artiss-transient-cleaner",
                "version": "1.1",
                "version_normalized": "1.1.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/artiss-transient-cleaner.1.1.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>\"Transients are a simple and standardized way of storing cached data in the WordPress database temporarily by giving it a custom name and a timeframe after which it will expire and be deleted.\"<\/p>\n\n<p>Unfortunately, expired entries will only be deleted if you attempt to access the transient again. If you don't access the transient then, even though it's expired, WordPress will not remove it. This is <a href=\"http:\/\/core.trac.wordpress.org\/ticket\/20316\" title=\"Ticket #20316\">a known \"issue\"<\/a> and is due to be corrected at some point in the WordPress core code.<\/p>\n\n<p>Why is this a problem? Transients are often used by plugins to \"cache\" data (my own plugins included). Because of the housekeeping problems this means that expired data can be left and build up, resulting in a bloated database table.<\/p>\n\n<p>Meantime, this plugin is the solution, using the same proposed method as the WordPress core change will use. Simply activate the plugin, sit back and enjoy a much cleaner, smalle",
                "uid": "14358"
            },
            "1.2": {
                "name": "wordpress\/artiss-transient-cleaner",
                "version": "1.2",
                "version_normalized": "1.2.0.0",
                "dist": {
                    "type": "zip",
                    "url": "http:\/\/downloads.wordpress.org\/plugin\/artiss-transient-cleaner.1.2.zip",
                    "reference": null,
                    "shasum": null
                },
                "require": {
                    "wordpress\/installer": "0.1.*"
                },
                "type": "wordpress-plugin",
                "description": "<p>\"Transients are a simple and standardized way of storing cached data in the WordPress database temporarily by giving it a custom name and a timeframe after which it will expire and be deleted.\"<\/p>\n\n<p>Unfortunately, expired entries will only be deleted if you attempt to access the transient again. If you don't access the transient then, even though it's expired, WordPress will not remove it. This is <a href=\"http:\/\/core.trac.wordpress.org\/ticket\/20316\" title=\"Ticket #20316\">a known \"issue\"<\/a> and is due to be corrected at some point in the WordPress core code.<\/p>\n\n<p>Why is this a problem? Transients are often used by plugins to \"cache\" data (my own plugins included). Because of the housekeeping problems this means that expired data can be left and build up, resulting in a bloated database table.<\/p>\n\n<p>Meantime, this plugin is the solution, using the same proposed method as the WordPress core change will use. Simply activate the plugin, sit back and enjoy a much cleaner, smalle",
                "uid": "14357"
            }
        }
    }
}